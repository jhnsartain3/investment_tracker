{"version":3,"sources":["assets/images/avatars/0.jpg","assets/images/shards-dashboards-logo.svg","components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/Notifications.js","authentication/services/AuthenticationService.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","assets/flux/constants.js","assets/flux/dispatcher.js","assets/flux/store.js","components/layout/MainSidebar/SidebarItems.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","components/layout/default layout/Default.js","components/layout/default layout/Empty.js","components/common/PageTitle.js","components/utils/chart.js","components/common/SmallStats.js","components/common/RangeDatePicker.js","components/tiles/StockGraph.js","components/tiles/TopStocks.js","pages/DashboardOverviewScreen.js","components/tiles/AllTransactionsTable.js","components/tiles/BuySellDividendRatioGraph.js","components/api/AccessApi.js","components/api/AccessApiWrapper.js","pages/AllTransactionsScreen.js","components/tiles/SubmitNewTransaction.js","pages/StockOverviewScreen.js","authentication/components/RegisterForm.js","pages/RegisterScreen.js","authentication/higherOrderComponents/withAuthentication.js","authentication/components/SignInForm.js","pages/SignInScreen.js","routes.js","withTracker.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","NavbarSearch","react_default","a","createElement","shards_react_es","className","seamless","type","placeholder","Notifications","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","toggleNotifications","bind","assertThisInitialized","setState","onClick","pill","theme","open","React","Component","AuthenticationService","domain","window","location","href","includes","fetch","login","getProfile","username","password","concat","method","body","JSON","stringify","then","res","setToken","Promise","resolve","token","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","Content-Type","loggedIn","objectSpread","_checkStatus","response","json","status","error","Error","statusText","UserActions","toggleUserActions","AuthService","tag","Dropdown","caret","toggle","NavLink","src","require","alt","DropdownMenu","right","small","Link","to","divider","logout","NavbarNav","navbar","Notifications_Notifications","UserActions_UserActions","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","htmlBefore","store","Store","registerToActions","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","handleClick","dispatch","MainNavbar","layout","stickyTop","classes","classNames","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","id","maxWidth","SidebarSearch","display","minHeight","aria-label","SidebarNavItem","item","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","SidebarNavItems","getSidebarItems","onChange","addChangeListener","removeChangeListener","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","layout_MainFooter","Empty","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","SmallStats","canvasRef","createRef","chartOptions","maintainAspectRatio","responsive","legend","tooltips","enabled","custom","elements","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","apply","toConsumableArray","chartData","data","chartConfig","labels","chartLabels","datasets","current","_this$props","variation","label","value","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","height","ref","shortid","create","RangeDatePicker","startDate","undefined","endDate","handleStartDateChange","handleEndDateChange","selected","placeholderText","dropdownMode","StockGraph","position","tick","index","toFixed","hover","mode","intersect","BlogUsersOverview","buoMeta","getDatasetMeta","_model","render","common_RangeDatePicker","Array","from","_","i","fill","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","borderDash","pointBorderColor","TopStocks","padding","boxWidth","cutoutPercentage","hoverBorderColor","DashboardOverviewScreen","smallStats","noGutters","common_PageTitle","stats","common_SmallStats","decrease","tiles_StockGraph","tiles_TopStocks","AllTransactionsTable","header","scope","transactions","formatDate","date","ticker","quantity","price","total","unformattedDate","year","substring","generateHeaders","generateRows","displayChart","BuySellDividendRatioGraph","authenticationService","AccessApiWrapper","get","urlExtension","uid","react","AccessApi","Authorization","result","accessApiWrapper","AllTransactionsScreen","isLoaded","determineChartData","buyCount","sellCount","dividendCount","forEach","_this2","getData","tiles_AllTransactionsTable","tiles_BuySellDividendRatioGraph","SubmitNewTransaction","buyButtonColorIsSelected","sellButtonColorIsSelected","dividendButtonColorIsSelected","quantityField","priceField","totalField","dateField","handleChange","handleFormSubmit","handleTypeButtons","event","defineProperty","target","name","preventDefault","parseFloat","parseInt","postData","flush","StockOverviewScreen","tiles_SubmitNewTransaction","Copyright","Typography","variant","color","align","Link_Link","getFullYear","useStyles","makeStyles","paper","marginTop","spacing","flexDirection","alignItems","avatar","margin","palette","secondary","main","form","width","submit","RegisterForm","Container","component","CssBaseline","Avatar","LockOutlined_default","noValidate","Grid","container","hidden","TextField","required","fullWidth","isEmailFieldValid","autoComplete","isUsernameFieldValid","isPasswordFieldValid","FormControlLabel","control","Checkbox","Button","onSubmit","justify","Box","mt","RegisterScreen","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","email","history","replace","catch","stop","_x","arguments","_ref2","_callee2","_context2","_x2","withAuthentication","AuthComponent","_Component","AuthWrapped","user","inherits","createClass","profile","SignInForm","autoFocus","SignInForm_Copyright","SignInScreen","console","log","routes","path","exact","Redirect","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","pathname","search","prevProps","currentPage","nextPage","Boolean","hostname","match","ReactDOM","BrowserRouter","basename","route","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99150f6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.73476783.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.161c7399.svg\";","import React from \"react\";\r\nimport {Form, FormInput, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nexport default () => (\r\n    <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\r\n        <InputGroup seamless className=\"ml-3\">\r\n            <InputGroupAddon type=\"prepend\">\r\n                <InputGroupText>\r\n                    <i className=\"material-icons\">search</i>\r\n                </InputGroupText>\r\n            </InputGroupAddon>\r\n            <FormInput\r\n                className=\"navbar-search\"\r\n                placeholder=\"Search for something...\"\r\n            />\r\n        </InputGroup>\r\n    </Form>\r\n);\r\n","import React from \"react\";\r\nimport {Badge, Collapse, DropdownItem, NavItem, NavLink} from \"shards-react\";\r\n\r\nexport default class Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.toggleNotifications = this.toggleNotifications.bind(this);\r\n    }\r\n\r\n    toggleNotifications() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavItem className=\"border-right dropdown notifications\">\r\n                <NavLink\r\n                    className=\"nav-link-icon text-center\"\r\n                    onClick={this.toggleNotifications}\r\n                >\r\n                    <div className=\"nav-link-icon__wrapper\">\r\n                        <i className=\"material-icons\">&#xE7F4;</i>\r\n                        <Badge pill theme=\"danger\">\r\n                            2\r\n                        </Badge>\r\n                    </div>\r\n                </NavLink>\r\n                <Collapse\r\n                    open={this.state.visible}\r\n                    className=\"dropdown-menu dropdown-menu-small\"\r\n                >\r\n                    <DropdownItem>\r\n                        <div className=\"notification__icon-wrapper\">\r\n                            <div className=\"notification__icon\">\r\n                                <i className=\"material-icons\">&#xE6E1;</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"notification__content\">\r\n                            <span className=\"notification__category\">Analytics</span>\r\n                            <p>\r\n                                Your website’s active users count increased by{\" \"}\r\n                                <span className=\"text-success text-semibold\">28%</span> in the\r\n                                last week. Great job!\r\n                            </p>\r\n                        </div>\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                        <div className=\"notification__icon-wrapper\">\r\n                            <div className=\"notification__icon\">\r\n                                <i className=\"material-icons\">&#xE8D1;</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"notification__content\">\r\n                            <span className=\"notification__category\">Sales</span>\r\n                            <p>\r\n                                Last week your store’s sales count decreased by{\" \"}\r\n                                <span className=\"text-danger text-semibold\">5.52%</span>. It\r\n                                could have been worse!\r\n                            </p>\r\n                        </div>\r\n                    </DropdownItem>\r\n                    <DropdownItem className=\"notification__all text-center\">\r\n                        View all Notifications\r\n                    </DropdownItem>\r\n                </Collapse>\r\n            </NavItem>\r\n        );\r\n    }\r\n}\r\n","import decode from 'jwt-decode';\r\n\r\nexport default class AuthenticationService {\r\n    constructor() {\r\n        let baseUrlTest = \"https://sartain-studios-api.com:10101\"; //https://localhost:44344\";\r\n        let baseUrlProd = \"https://sartain-studios-api.com:10100\";\r\n\r\n        this.domain = window.location.href.includes(\"localhost\") ?\r\n            baseUrlTest :\r\n            baseUrlProd;\r\n\r\n        this.fetch = this.fetch.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.fetch(`${this.domain}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        }).then(res => {\r\n            this.setToken(res);\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            return decoded.exp < Date.now() / 1000;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setToken(idToken) {\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n    }\r\n\r\n    getProfile() {\r\n        // Using jwt-decode npm package to decode the token\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    fetch(url, options) {\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Collapse, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, NavItem, NavLink} from \"shards-react\";\r\nimport AuthenticationService from \"../../../../authentication/services/AuthenticationService\";\r\n\r\nexport default class UserActions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.toggleUserActions = this.toggleUserActions.bind(this);\r\n    }\r\n\r\n    toggleUserActions() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const AuthService = new AuthenticationService();\r\n\r\n        return (\r\n            <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n                <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n                    <img\r\n                        className=\"user-avatar rounded-circle mr-2\"\r\n                        src={require(\"../../../../assets/images/avatars/0.jpg\")}\r\n                        alt=\"User Avatar\"\r\n                    />{\" \"}\r\n                    <span className=\"d-none d-md-inline-block\">Sierra Brooks</span>\r\n                </DropdownToggle>\r\n                <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n                    <DropdownItem tag={Link} to=\"user-profile\">\r\n                        <i className=\"material-icons\">&#xE7FD;</i> Account\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"edit-user-profile\">\r\n                        <i className=\"material-icons\">&#xE8B8;</i> Settings\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"file-manager-list\">\r\n                        <i className=\"material-icons\">&#xE2C7;</i> Files\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"transaction-history\">\r\n                        <i className=\"material-icons\">&#xE896;</i> Transactions\r\n                    </DropdownItem>\r\n                    <DropdownItem divider/>\r\n                    <DropdownItem tag={Link} to=\"/\" className=\"text-danger\" onClick={AuthService.logout}>\r\n                        <i className=\"material-icons text-danger\">&#xE879;</i> Logout\r\n                    </DropdownItem>\r\n                </Collapse>\r\n            </NavItem>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Nav} from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n    <Nav navbar className=\"border-left flex-row\">\r\n        <Notifications/>\r\n        <UserActions/>\r\n    </Nav>\r\n);\r\n","export default {\r\n    CHANGE: \"CHANGE\",\r\n    TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\r\n};\r\n","import {Dispatcher} from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","import {EventEmitter} from \"events\";\r\n\r\nimport Dispatcher from \"./dispatcher\";\r\nimport Constants from \"./constants\";\r\nimport getSidebarNavItems from \"../../components/layout/MainSidebar/SidebarItems\";\r\n\r\nlet _store = {\r\n    menuVisible: false,\r\n    navItems: getSidebarNavItems()\r\n};\r\n\r\nclass Store extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.registerToActions = this.registerToActions.bind(this);\r\n        this.toggleSidebar = this.toggleSidebar.bind(this);\r\n\r\n        Dispatcher.register(this.registerToActions.bind(this));\r\n    }\r\n\r\n    registerToActions({actionType, payload}) {\r\n        switch (actionType) {\r\n            case Constants.TOGGLE_SIDEBAR:\r\n                this.toggleSidebar();\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    toggleSidebar() {\r\n        _store.menuVisible = !_store.menuVisible;\r\n        this.emit(Constants.CHANGE);\r\n    }\r\n\r\n    getMenuState() {\r\n        return _store.menuVisible;\r\n    }\r\n\r\n    getSidebarItems() {\r\n        return _store.navItems;\r\n    }\r\n\r\n    addChangeListener(callback) {\r\n        this.on(Constants.CHANGE, callback);\r\n    }\r\n\r\n    removeChangeListener(callback) {\r\n        this.removeListener(Constants.CHANGE, callback);\r\n    }\r\n}\r\n\r\nexport default new Store();\r\n","export default function () {\r\n    return [\r\n        {\r\n            title: \"Dashboard\",\r\n            to: \"/dashboard-overview\",\r\n            htmlBefore: '<i class=\"material-icons\">table_chart</i>'\r\n        },\r\n        {\r\n            title: \"Stock Overview\",\r\n            to: \"/stock-overview\",\r\n            htmlBefore: '<i class=\"material-icons\">vertical_split</i>'\r\n        },\r\n        {\r\n            title: \"Transactions\",\r\n            to: \"/transactions-list\",\r\n            htmlBefore: '<i class=\"material-icons\">view_module</i>'\r\n        }\r\n    ];\r\n}\r\n","import React from \"react\";\r\n\r\nimport {Constants, Dispatcher} from \"../../../assets/flux\";\r\n\r\nclass NavbarToggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        Dispatcher.dispatch({\r\n            actionType: Constants.TOGGLE_SIDEBAR\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"nav\">\r\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                <a href=\"#\" onClick={this.handleClick}\r\n                   className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\r\n                    <i className=\"material-icons\">&#xE5D2;</i>\r\n                </a>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {Container, Navbar} from \"shards-react\";\r\n\r\nimport NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({layout, stickyTop}) => {\r\n    const classes = classNames(\r\n        \"main-navbar\",\r\n        \"bg-white\",\r\n        stickyTop && \"sticky-top\"\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <Container className=\"p-0\">\r\n                <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n                    <NavbarSearch/>\r\n                    <NavbarNav/>\r\n                    <NavbarToggle/>\r\n                </Navbar>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n    /**\r\n     * The layout type where the MainNavbar is used.\r\n     */\r\n    layout: PropTypes.string,\r\n    /**\r\n     * Whether the main Navbar is sticky to the top, or not.\r\n     */\r\n    stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n    stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Navbar, NavbarBrand} from \"shards-react\";\r\n\r\nimport {Constants, Dispatcher} from \"../../../assets/flux\";\r\n\r\nclass SidebarMainNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\r\n    }\r\n\r\n    handleToggleSidebar() {\r\n        Dispatcher.dispatch({\r\n            actionType: Constants.TOGGLE_SIDEBAR\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {hideLogoText} = this.props;\r\n        return (\r\n            <div className=\"main-navbar\">\r\n                <Navbar\r\n                    className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\r\n                    type=\"light\"\r\n                >\r\n                    <NavbarBrand\r\n                        className=\"w-100 mr-0\"\r\n                        href=\"#\"\r\n                        style={{lineHeight: \"25px\"}}\r\n                    >\r\n                        <div className=\"d-table m-auto\">\r\n                            <img\r\n                                id=\"main-logo\"\r\n                                className=\"d-inline-block align-top mr-1\"\r\n                                style={{maxWidth: \"25px\"}}\r\n                                src={require(\"../../../assets/images/shards-dashboards-logo.svg\")}\r\n                                alt=\"Investment Tracker Dashboard\"\r\n                            />\r\n                            {!hideLogoText && (<span className=\"d-none d-md-inline ml-1\">Investment Tracker</span>\r\n                            )}\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    {/* eslint-disable-next-line */}\r\n                    <a\r\n                        className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\r\n                        onClick={this.handleToggleSidebar}\r\n                    >\r\n                        <i className=\"material-icons\">&#xE5C4;</i>\r\n                    </a>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarMainNavbar.propTypes = {\r\n    /**\r\n     * Whether to hide the logo text, or not.\r\n     */\r\n    hideLogoText: PropTypes.bool\r\n};\r\n\r\nSidebarMainNavbar.defaultProps = {\r\n    hideLogoText: false\r\n};\r\n\r\nexport default SidebarMainNavbar;\r\n","import React from \"react\";\r\nimport {Form, FormInput, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nexport default () => (\r\n    <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\"\r\n          style={{display: \"flex\", minHeight: \"45px\"}}>\r\n        <InputGroup seamless className=\"ml-3\">\r\n            <InputGroupAddon type=\"prepend\">\r\n                <InputGroupText>\r\n                    <i className=\"material-icons\">search</i>\r\n                </InputGroupText>\r\n                <FormInput\r\n                    className=\"navbar-search\"\r\n                    placeholder=\"Search for something...\"\r\n                    aria-label=\"Search\"\r\n                />\r\n            </InputGroupAddon>\r\n        </InputGroup>\r\n    </Form>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {NavLink as RouteNavLink} from \"react-router-dom\";\r\nimport {NavItem, NavLink} from \"shards-react\";\r\n\r\nconst SidebarNavItem = ({item}) => (\r\n    <NavItem>\r\n        <NavLink tag={RouteNavLink} to={item.to}>\r\n            {item.htmlBefore && (\r\n                <div\r\n                    className=\"d-inline-block item-icon-wrapper\"\r\n                    dangerouslySetInnerHTML={{__html: item.htmlBefore}}\r\n                />\r\n            )}\r\n            {item.title && <span>{item.title}</span>}\r\n            {item.htmlAfter && (\r\n                <div\r\n                    className=\"d-inline-block item-icon-wrapper\"\r\n                    dangerouslySetInnerHTML={{__html: item.htmlAfter}}\r\n                />\r\n            )}\r\n        </NavLink>\r\n    </NavItem>\r\n);\r\n\r\nSidebarNavItem.propTypes = {\r\n    /**\r\n     * The item object.\r\n     */\r\n    item: PropTypes.object\r\n};\r\n\r\nexport default SidebarNavItem;\r\n","import React from \"react\";\r\nimport {Nav} from \"shards-react\";\r\n\r\nimport SidebarNavItem from \"./SidebarNavItem\";\r\nimport {Store} from \"../../../assets/flux\";\r\n\r\nclass SidebarNavItems extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            navItems: Store.getSidebarItems()\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        Store.addChangeListener(this.onChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Store.removeChangeListener(this.onChange);\r\n    }\r\n\r\n    onChange() {\r\n        this.setState({\r\n            ...this.state,\r\n            navItems: Store.getSidebarItems()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {navItems: items} = this.state;\r\n        return (\r\n            <div className=\"nav-wrapper\">\r\n                <Nav className=\"nav--no-borders flex-column\">\r\n                    {items.map((item, idx) => (\r\n                        <SidebarNavItem key={idx} item={item}/>\r\n                    ))}\r\n                </Nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarNavItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {Col} from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\nimport SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport {Store} from \"../../../assets/flux\";\r\n\r\nclass MainSidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menuVisible: false,\r\n            sidebarNavItems: Store.getSidebarItems()\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        Store.addChangeListener(this.onChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Store.removeChangeListener(this.onChange);\r\n    }\r\n\r\n    onChange() {\r\n        this.setState({\r\n            ...this.state,\r\n            menuVisible: Store.getMenuState(),\r\n            sidebarNavItems: Store.getSidebarItems()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classes = classNames(\r\n            \"main-sidebar\",\r\n            \"px-0\",\r\n            \"col-12\",\r\n            this.state.menuVisible && \"open\"\r\n        );\r\n\r\n        return (\r\n            <Col\r\n                tag=\"aside\"\r\n                className={classes}\r\n                lg={{size: 2}}\r\n                md={{size: 3}}\r\n            >\r\n                <SidebarMainNavbar hideLogoText={this.props.hideLogoText}/>\r\n                <SidebarSearch/>\r\n                <SidebarNavItems/>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n    /**\r\n     * Whether to hide the logo text, or not.\r\n     */\r\n    hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n    hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Container, Nav, NavItem, NavLink, Row} from \"shards-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MainFooter = ({contained, menuItems, copyright}) => (\r\n    <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\r\n        <Container fluid={contained}>\r\n            <Row>\r\n                <Nav>\r\n                    {menuItems.map((item, idx) => (\r\n                        <NavItem key={idx}>\r\n                            <NavLink tag={Link} to={item.to}>\r\n                                {item.title}\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    ))}\r\n                </Nav>\r\n                <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n);\r\n\r\nMainFooter.propTypes = {\r\n    /**\r\n     * Whether the content is contained, or not.\r\n     */\r\n    contained: PropTypes.bool,\r\n    /**\r\n     * The menu items array.\r\n     */\r\n    menuItems: PropTypes.array,\r\n    /**\r\n     * The copyright info.\r\n     */\r\n    copyright: PropTypes.string\r\n};\r\n\r\nMainFooter.defaultProps = {\r\n    contained: false,\r\n    copyright: \"Sartain Studios\",\r\n    menuItems: [\r\n        {\r\n            title: \"Home\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"Services\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"About\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"Products\",\r\n            to: \"#\"\r\n        }\r\n    ]\r\n};\r\n\r\nexport default MainFooter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport MainNavbar from \"../MainNavbar/MainNavbar\";\r\nimport MainSidebar from \"../MainSidebar/MainSidebar\";\r\nimport MainFooter from \"../MainFooter\";\r\n\r\nconst DefaultLayout = ({children, noNavbar, noFooter}) => (\r\n    <Container fluid>\r\n        <Row>\r\n            <MainSidebar/>\r\n            <Col\r\n                className=\"main-content p-0\"\r\n                lg={{size: 10, offset: 2}}\r\n                md={{size: 9, offset: 3}}\r\n                sm=\"12\"\r\n                tag=\"main\"\r\n            >\r\n                {!noNavbar && <MainNavbar/>}\r\n                {children}\r\n                {!noFooter && <MainFooter/>}\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nDefaultLayout.propTypes = {\r\n    /**\r\n     * Whether to display the Navbar, or not.\r\n     */\r\n    noNavbar: PropTypes.bool,\r\n    /**\r\n     * Whether to display the footer, or not.\r\n     */\r\n    noFooter: PropTypes.bool\r\n};\r\n\r\nDefaultLayout.defaultProps = {\r\n    noNavbar: false,\r\n    noFooter: false\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Empty = ({children, noNavbar, noFooter}) => (\r\n    <div>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nEmpty.propTypes = {\r\n    /**\r\n     * Whether to display the Navbar, or not.\r\n     */\r\n    noNavbar: PropTypes.bool,\r\n    /**\r\n     * Whether to display the footer, or not.\r\n     */\r\n    noFooter: PropTypes.bool\r\n};\r\n\r\nEmpty.defaultProps = {\r\n    noNavbar: false,\r\n    noFooter: false\r\n};\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col} from \"shards-react\";\r\n\r\nconst PageTitle = ({title, subtitle, className, ...attrs}) => {\r\n    const classes = classNames(\r\n        className,\r\n        \"text-center\",\r\n        \"text-md-left\",\r\n        \"mb-sm-0\"\r\n    );\r\n\r\n    return (\r\n        <Col xs=\"12\" sm=\"4\" className={classes} {...attrs}>\r\n            <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\r\n            <h3 className=\"page-title\">{title}</h3>\r\n        </Col>\r\n    )\r\n};\r\n\r\nPageTitle.propTypes = {\r\n    /**\r\n     * The page title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The page subtitle.\r\n     */\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","import Chart from 'chart.js';\r\n\r\nChart.defaults.LineWithLine = Chart.defaults.line;\r\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\r\n    draw(ease) {\r\n        Chart.controllers.line.prototype.draw.call(this, ease);\r\n\r\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n            const activePoint = this.chart.tooltip._active[0];\r\n            const {ctx} = this.chart;\r\n            const {x} = activePoint.tooltipPosition();\r\n            const topY = this.chart.scales['y-axis-0'].top;\r\n            const bottomY = this.chart.scales['y-axis-0'].bottom;\r\n\r\n            // Draw the line\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, topY);\r\n            ctx.lineTo(x, bottomY);\r\n            ctx.lineWidth = 0.5;\r\n            ctx.strokeStyle = '#ddd';\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        }\r\n    },\r\n});\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport shortid from \"shortid\";\r\nimport {Card, CardBody} from \"shards-react\";\r\n\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass SmallStats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartOptions = {\r\n            ...{\r\n                maintainAspectRatio: true,\r\n                responsive: true,\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    enabled: false,\r\n                    custom: false\r\n                },\r\n                elements: {\r\n                    point: {\r\n                        radius: 0\r\n                    },\r\n                    line: {\r\n                        tension: 0.33\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            ticks: {\r\n                                display: false\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            scaleLabel: false,\r\n                            ticks: {\r\n                                display: false,\r\n                                isplay: false,\r\n                                // Avoid getting the graph line cut of at the top of the canvas.\r\n                                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\r\n                                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            ...this.props.chartOptions\r\n        };\r\n\r\n        const chartConfig = {\r\n            ...{\r\n                type: \"line\",\r\n                data: {\r\n                    ...{\r\n                        labels: this.props.chartLabels\r\n                    },\r\n                    ...{\r\n                        datasets: this.props.chartData\r\n                    }\r\n                },\r\n                options: chartOptions\r\n            },\r\n            ...this.props.chartConfig\r\n        };\r\n\r\n        new Chart(this.canvasRef.current, chartConfig);\r\n    }\r\n\r\n    render() {\r\n        const {variation, label, value, percentage, increase} = this.props;\r\n\r\n        const cardClasses = classNames(\r\n            \"stats-small\",\r\n            variation && `stats-small--${variation}`\r\n        );\r\n\r\n        const cardBodyClasses = classNames(\r\n            variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\r\n        );\r\n\r\n        const innerWrapperClasses = classNames(\r\n            \"d-flex\",\r\n            variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\r\n        );\r\n\r\n        const dataFieldClasses = classNames(\r\n            \"stats-small__data\",\r\n            variation === \"1\" && \"text-center\"\r\n        );\r\n\r\n        const labelClasses = classNames(\r\n            \"stats-small__label\",\r\n            \"text-uppercase\",\r\n            variation !== \"1\" && \"mb-1\"\r\n        );\r\n\r\n        const valueClasses = classNames(\r\n            \"stats-small__value\",\r\n            \"count\",\r\n            variation === \"1\" ? \"my-3\" : \"m-0\"\r\n        );\r\n\r\n        const innerDataFieldClasses = classNames(\r\n            \"stats-small__data\",\r\n            variation !== \"1\" && \"text-right align-items-center\"\r\n        );\r\n\r\n        const percentageClasses = classNames(\r\n            \"stats-small__percentage\",\r\n            `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\r\n        );\r\n\r\n        const canvasHeight = variation === \"1\" ? 120 : 60;\r\n\r\n        return (\r\n            <Card small className={cardClasses}>\r\n                <CardBody className={cardBodyClasses}>\r\n                    <div className={innerWrapperClasses}>\r\n                        <div className={dataFieldClasses}>\r\n                            <span className={labelClasses}>{label}</span>\r\n                            <h6 className={valueClasses}>{value}</h6>\r\n                        </div>\r\n                        <div className={innerDataFieldClasses}>\r\n                            <span className={percentageClasses}>{percentage}</span>\r\n                        </div>\r\n                    </div>\r\n                    <canvas\r\n                        height={canvasHeight}\r\n                        ref={this.canvasRef}\r\n                        className={`stats-small-${shortid()}`}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nSmallStats.propTypes = {\r\n    /**\r\n     * The Small Stats variation.\r\n     */\r\n    variation: PropTypes.string,\r\n    /**\r\n     * The label.\r\n     */\r\n    label: PropTypes.string,\r\n    /**\r\n     * The value.\r\n     */\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    /**\r\n     * The percentage number or string.\r\n     */\r\n    percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    /**\r\n     * Whether is a value increase, or not.\r\n     */\r\n    increase: PropTypes.bool,\r\n    /**\r\n     * The Chart.js configuration object.\r\n     */\r\n    chartConfig: PropTypes.object,\r\n    /**\r\n     * The Chart.js options object.\r\n     */\r\n    chartOptions: PropTypes.object,\r\n    /**\r\n     * The chart data.\r\n     */\r\n    chartData: PropTypes.array.isRequired,\r\n    /**\r\n     * The chart labels.\r\n     */\r\n    chartLabels: PropTypes.array\r\n};\r\n\r\nSmallStats.defaultProps = {\r\n    increase: true,\r\n    percentage: 0,\r\n    value: 0,\r\n    label: \"Label\",\r\n    chartOptions: Object.create(null),\r\n    chartConfig: Object.create(null),\r\n    chartData: [],\r\n    chartLabels: []\r\n};\r\n\r\nexport default SmallStats;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {DatePicker, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nimport \"../../assets/css/range-date-picker.css\";\r\n\r\nclass RangeDatePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            startDate: undefined,\r\n            endDate: undefined\r\n        };\r\n\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n    }\r\n\r\n    handleStartDateChange(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            ...{startDate: new Date(value)}\r\n        });\r\n    }\r\n\r\n    handleEndDateChange(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            ...{endDate: new Date(value)}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {className} = this.props;\r\n        const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\r\n\r\n        return (\r\n            <InputGroup className={classes}>\r\n                <DatePicker\r\n                    size=\"sm\"\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleStartDateChange}\r\n                    placeholderText=\"Start Date\"\r\n                    dropdownMode=\"select\"\r\n                    className=\"text-center\"\r\n                />\r\n                <DatePicker\r\n                    size=\"sm\"\r\n                    selected={this.state.endDate}\r\n                    onChange={this.handleEndDateChange}\r\n                    placeholderText=\"End Date\"\r\n                    dropdownMode=\"select\"\r\n                    className=\"text-center\"\r\n                />\r\n                <InputGroupAddon type=\"append\">\r\n                    <InputGroupText>\r\n                        <i className=\"material-icons\">&#xE916;</i>\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeDatePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Button, Card, CardBody, CardHeader, Col, Row} from \"shards-react\";\r\n\r\nimport RangeDatePicker from \"../common/RangeDatePicker\";\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass StockGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartOptions = {\r\n            ...{\r\n                responsive: true,\r\n                legend: {\r\n                    position: \"top\"\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        // A higher value makes the line look skewed at this ratio.\r\n                        tension: 0.3\r\n                    },\r\n                    point: {\r\n                        radius: 0\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            ticks: {\r\n                                callback(tick, index) {\r\n                                    // Jump every 7 values on the X axis labels to avoid clutter.\r\n                                    return index % 7 !== 0 ? \"\" : tick;\r\n                                }\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            ticks: {\r\n                                suggestedMax: 45,\r\n                                callback(tick) {\r\n                                    if (tick === 0) {\r\n                                        return tick;\r\n                                    }\r\n                                    // Format the amounts using Ks for thousands.\r\n                                    return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                hover: {\r\n                    mode: \"nearest\",\r\n                    intersect: false\r\n                },\r\n                tooltips: {\r\n                    custom: false,\r\n                    mode: \"nearest\",\r\n                    intersect: false\r\n                }\r\n            },\r\n            ...this.props.chartOptions\r\n        };\r\n\r\n        const BlogUsersOverview = new Chart(this.canvasRef.current, {\r\n            type: \"LineWithLine\",\r\n            data: this.props.chartData,\r\n            options: chartOptions\r\n        });\r\n\r\n        // They can still be triggered on hover.\r\n        const buoMeta = BlogUsersOverview.getDatasetMeta(0);\r\n        buoMeta.data[0]._model.radius = 0;\r\n        buoMeta.data[\r\n        this.props.chartData.datasets[0].data.length - 1\r\n            ]._model.radius = 0;\r\n\r\n        // Render the chart.\r\n        BlogUsersOverview.render();\r\n    }\r\n\r\n    render() {\r\n        const {title} = this.props;\r\n        return (\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0\">\r\n                    <Row className=\"border-bottom py-2 bg-light\">\r\n                        <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\r\n                            <RangeDatePicker/>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\r\n                            >\r\n                                View Full Screen &rarr;\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <canvas\r\n                        height=\"120\"\r\n                        ref={this.canvasRef}\r\n                        style={{maxWidth: \"100% !important\"}}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nStockGraph.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart dataset.\r\n     */\r\n    chartData: PropTypes.object,\r\n    /**\r\n     * The Chart.js options.\r\n     */\r\n    chartOptions: PropTypes.object\r\n};\r\n\r\nStockGraph.defaultProps = {\r\n    title: \"Overview\",\r\n    chartData: {\r\n        labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\r\n        datasets: [\r\n            {\r\n                label: \"Current Month\",\r\n                fill: \"start\",\r\n                data: [\r\n                    500,\r\n                    800,\r\n                    320,\r\n                    180,\r\n                    240,\r\n                    320,\r\n                    230,\r\n                    650,\r\n                    590,\r\n                    1200,\r\n                    750,\r\n                    940,\r\n                    1420,\r\n                    1200,\r\n                    960,\r\n                    1450,\r\n                    1820,\r\n                    2800,\r\n                    2102,\r\n                    1920,\r\n                    3920,\r\n                    3202,\r\n                    3140,\r\n                    2800,\r\n                    3200,\r\n                    3200,\r\n                    3400,\r\n                    2910,\r\n                    3100,\r\n                    4250\r\n                ],\r\n                backgroundColor: \"rgba(0,123,255,0.1)\",\r\n                borderColor: \"rgba(0,123,255,1)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointHoverBackgroundColor: \"rgb(0,123,255)\",\r\n                borderWidth: 1.5,\r\n                pointRadius: 0,\r\n                pointHoverRadius: 3\r\n            },\r\n            {\r\n                label: \"Past Month\",\r\n                fill: \"start\",\r\n                data: [\r\n                    380,\r\n                    430,\r\n                    120,\r\n                    230,\r\n                    410,\r\n                    740,\r\n                    472,\r\n                    219,\r\n                    391,\r\n                    229,\r\n                    400,\r\n                    203,\r\n                    301,\r\n                    380,\r\n                    291,\r\n                    620,\r\n                    700,\r\n                    300,\r\n                    630,\r\n                    402,\r\n                    320,\r\n                    380,\r\n                    289,\r\n                    410,\r\n                    300,\r\n                    530,\r\n                    630,\r\n                    720,\r\n                    780,\r\n                    1200\r\n                ],\r\n                backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                borderColor: \"rgba(255,65,105,1)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\r\n                borderDash: [3, 3],\r\n                borderWidth: 1,\r\n                pointRadius: 0,\r\n                pointHoverRadius: 2,\r\n                pointBorderColor: \"rgba(255,65,105,1)\"\r\n            }\r\n        ]\r\n    }\r\n};\r\n\r\nexport default StockGraph;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Card, CardBody, CardFooter, CardHeader, Col, FormSelect, Row} from \"shards-react\";\r\n\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass TopStocks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartConfig = {\r\n            type: \"pie\",\r\n            data: this.props.chartData,\r\n            options: {\r\n                ...{\r\n                    legend: {\r\n                        position: \"bottom\",\r\n                        labels: {\r\n                            padding: 25,\r\n                            boxWidth: 20\r\n                        }\r\n                    },\r\n                    cutoutPercentage: 0,\r\n                    tooltips: {\r\n                        custom: false,\r\n                        mode: \"index\",\r\n                        position: \"nearest\"\r\n                    }\r\n                },\r\n                ...this.props.chartOptions\r\n            }\r\n        };\r\n\r\n        new Chart(this.canvasRef.current, chartConfig);\r\n    }\r\n\r\n    render() {\r\n        const {title} = this.props;\r\n        return (\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"d-flex py-0\">\r\n                    <canvas\r\n                        height=\"220\"\r\n                        ref={this.canvasRef}\r\n                        className=\"blog-users-by-device m-auto\"\r\n                    />\r\n                </CardBody>\r\n                <CardFooter className=\"border-top\">\r\n                    <Row>\r\n                        <Col>\r\n                            <FormSelect\r\n                                size=\"sm\"\r\n                                value=\"last-week\"\r\n                                style={{maxWidth: \"130px\"}}\r\n                                onChange={() => {\r\n                                }}\r\n                            >\r\n                                <option value=\"last-week\">Last Week</option>\r\n                                <option value=\"today\">Today</option>\r\n                                <option value=\"last-month\">Last Month</option>\r\n                                <option value=\"last-year\">Last Year</option>\r\n                            </FormSelect>\r\n                        </Col>\r\n                        <Col className=\"text-right view-report\">\r\n                            {/* eslint-disable-next-line */}\r\n                            <a href=\"#\">View full report &rarr;</a>\r\n                        </Col>\r\n                    </Row>\r\n                </CardFooter>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nTopStocks.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart config object.\r\n     */\r\n    chartConfig: PropTypes.object,\r\n    /**\r\n     * The Chart.js options.\r\n     */\r\n    chartOptions: PropTypes.object,\r\n    /**\r\n     * The chart data.\r\n     */\r\n    chartData: PropTypes.object\r\n};\r\n\r\nTopStocks.defaultProps = {\r\n    title: \"Top Stocks\",\r\n    chartData: {\r\n        datasets: [\r\n            {\r\n                hoverBorderColor: \"#ffffff\",\r\n                data: [23.3, 53.3, 13.3],\r\n                backgroundColor: [\r\n                    \"rgba(0,123,255,0.6)\",\r\n                    \"rgba(0,123,255,0.9)\",\r\n                    \"rgba(0,123,255,0.2)\"\r\n                ]\r\n            }\r\n        ],\r\n        labels: [\"Apple\", \"Amazon\", \"Waste Management\"]\r\n    }\r\n};\r\n\r\nexport default TopStocks;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\nimport SmallStats from \"./../components/common/SmallStats\";\r\nimport StockGraph from \"../components/tiles/StockGraph\";\r\nimport TopStocks from \"../components/tiles/TopStocks\";\r\n\r\nconst DashboardOverviewScreen = ({smallStats}) => (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n            <PageTitle title=\"Overview\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\"/>\r\n        </Row>\r\n\r\n        {/* Small Stats Blocks */}\r\n        <Row>\r\n            {smallStats.map((stats, idx) => (\r\n                <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\r\n                    <SmallStats\r\n                        id={`small-stats-${idx}`}\r\n                        variation=\"1\"\r\n                        chartData={stats.datasets}\r\n                        chartLabels={stats.chartLabels}\r\n                        label={stats.label}\r\n                        value={stats.value}\r\n                        percentage={stats.percentage}\r\n                        increase={stats.increase}\r\n                        decrease={stats.decrease}\r\n                    />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n\r\n        <Row>\r\n            {/* Editor */}\r\n            <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                <StockGraph/>\r\n            </Col>\r\n            {/* Users by Device */}\r\n            <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\r\n                <TopStocks/>\r\n            </Col>\r\n        </Row>\r\n\r\n    </Container>\r\n);\r\n\r\nDashboardOverviewScreen.propTypes = {\r\n    /**\r\n     * The small stats dataset.\r\n     */\r\n    smallStats: PropTypes.array\r\n};\r\n\r\nDashboardOverviewScreen.defaultProps = {\r\n    smallStats: [\r\n        {\r\n            label: \"Top Performer\",\r\n            value: \"$210\",\r\n            percentage: \"4.7%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n                    borderColor: \"rgb(0, 184, 216)\",\r\n                    data: [1, 2, 1, 3, 5, 4, 7]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Favorite Stock\",\r\n            value: \"$198\",\r\n            percentage: \"12.4\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(23,198,113,0.1)\",\r\n                    borderColor: \"rgb(23,198,113)\",\r\n                    data: [1, 2, 3, 3, 3, 4, 4]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Purchases This Month\",\r\n            value: \"33\",\r\n            percentage: \"3.8%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,180,0,0.1)\",\r\n                    borderColor: \"rgb(255,180,0)\",\r\n                    data: [2, 3, 3, 3, 4, 3, 3]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Sells This Month\",\r\n            value: \"29\",\r\n            percentage: \".05%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                    borderColor: \"rgb(255,65,105)\",\r\n                    data: [3, 3, 3, 3, 3, 3, 2.75]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Lowest Performer\",\r\n            value: \"$154\",\r\n            percentage: \"2.4%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgb(0,123,255,0.1)\",\r\n                    borderColor: \"rgb(0,123,255)\",\r\n                    data: [6, 2, 3, 2, 4, 5, 4]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default DashboardOverviewScreen;\r\n","import React from \"react\";\r\nimport {Card, CardBody, CardHeader} from \"shards-react\";\r\n\r\nclass AllTransactionsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    generateHeaders() {\r\n        return this.props.headers.map((header) => (<th scope=\"col\" className=\"border-0\">{header}</th>));\r\n    }\r\n\r\n    generateRows() {\r\n        return this.props.transactions.map((x, i) => (\r\n                <tr>\r\n                    <td>{this.formatDate(x.date)}</td>\r\n                    <td>{x.type}</td>\r\n                    <td>{x.ticker}</td>\r\n                    <td>{x.quantity}</td>\r\n                    <td>${x.price}</td>\r\n                    <td>${x.total}</td>\r\n                </tr>\r\n            )\r\n        );\r\n    }\r\n\r\n    formatDate(unformattedDate) {\r\n        let year = unformattedDate.substring(0, 4);\r\n        let month = unformattedDate.substring(5, 7);\r\n        let day = unformattedDate.substring(8, 10);\r\n\r\n        return month + \"/\" + day + \"/\" + year;\r\n    }\r\n\r\n    displayChart() {\r\n        return (\r\n            <Card small className=\"mb-4\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{this.props.title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"p-0 pb-3\">\r\n                    <table className=\"table mb-0\">\r\n                        <thead className=\"bg-light\">\r\n                        <tr>\r\n                            {this.generateHeaders()}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.generateRows()}\r\n                        </tbody>\r\n                    </table>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let {transactions} = this.props;\r\n\r\n        if (transactions.length === 0)\r\n            return (\r\n                <Card small className=\"mb-4\">\r\n                    <CardHeader>\r\n                        <h1 className=\"m-0\">No Transactions Found</h1>\r\n                    </CardHeader>\r\n                </Card>\r\n            );\r\n        else if (transactions.length > 0)\r\n            return this.displayChart();\r\n    }\r\n}\r\n\r\nexport default AllTransactionsTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Card, CardBody, CardFooter, CardHeader, Col, FormSelect, Row} from \"shards-react\";\r\n\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass BuySellDividendRatioGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartConfig = {\r\n            type: \"pie\",\r\n            data: this.props.chartData,\r\n            options: {\r\n                ...{\r\n                    legend: {\r\n                        position: \"bottom\",\r\n                        labels: {\r\n                            padding: 25,\r\n                            boxWidth: 20\r\n                        }\r\n                    },\r\n                    cutoutPercentage: 0,\r\n                    tooltips: {\r\n                        custom: false,\r\n                        mode: \"index\",\r\n                        position: \"nearest\"\r\n                    }\r\n                },\r\n                ...this.props.chartOptions\r\n            }\r\n        };\r\n\r\n        new Chart(this.canvasRef.current, chartConfig);\r\n    }\r\n\r\n    render() {\r\n        const {title} = this.props;\r\n        return (\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"d-flex py-0\">\r\n                    <canvas\r\n                        height=\"220\"\r\n                        ref={this.canvasRef}\r\n                        className=\"blog-users-by-device m-auto\"\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nBuySellDividendRatioGraph.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart config object.\r\n     */\r\n    chartConfig: PropTypes.object,\r\n    /**\r\n     * The Chart.js options.\r\n     */\r\n    chartOptions: PropTypes.object,\r\n    /**\r\n     * The chart data.\r\n     */\r\n    chartData: PropTypes.object\r\n};\r\n\r\nBuySellDividendRatioGraph.defaultProps = {\r\n    title: \"Buy/Sell/Dividend Ratio\",\r\n    chartData: {\r\n        datasets: [\r\n            {\r\n                hoverBorderColor: \"#ffffff\",\r\n                data: [50, 40, 10],\r\n                backgroundColor: [\r\n                    \"rgba(0,123,255,0.6)\",\r\n                    \"rgba(0,123,255,0.9)\",\r\n                    \"rgba(0,123,255,0.2)\"\r\n                ]\r\n            }\r\n        ],\r\n        labels: [\"Buy\", \"Sell\", \"Dividend\"]\r\n    }\r\n};\r\n\r\nexport default BuySellDividendRatioGraph;\r\n","import * as React from \"react\";\r\nimport AuthenticationService from \"../../authentication/services/AuthenticationService\";\r\n\r\nvar authenticationService = new AuthenticationService();\r\n\r\nclass AccessApi extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let baseUrlTest = \"https://sartain-studios-api.com:10101\"; //\"https://localhost:44344\";\r\n        let baseUrlProd = \"https://sartain-studios-api.com:10100\";\r\n\r\n        this.state = {\r\n            url: window.location.href.includes(\"localhost\") ?\r\n                baseUrlTest :\r\n                baseUrlProd\r\n        };\r\n    }\r\n\r\n    getData(urlExtension) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        const headers = {'Authorization': 'Bearer ' + authenticationService.getToken()};\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url, {headers})\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(result)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    postData(urlExtension, data) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + authenticationService.getToken(),\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(result)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteData(urlExtension, uid) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url + uid, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(\"Deleted: \" + uid)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(\"Failed to delete: \" + uid + \" error: \" + error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>AccessFirebase</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessApi;\r\n","import * as React from \"react\";\r\nimport AccessAPI from \"./AccessApi\";\r\n\r\nclass AccessApiWrapper extends AccessAPI {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getData(item) {\r\n        return super.getData(item);\r\n    }\r\n\r\n    postData(urlExtension, data) {\r\n        return super.postData(urlExtension, data);\r\n    }\r\n\r\n    deleteData(urlExtension, uid) {\r\n        return super.deleteData(urlExtension, uid);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>AccessAPIWrapper</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessApiWrapper;\r\n","import React from \"react\";\r\nimport {Card, CardHeader, Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AllTransactionsTable from \"../components/tiles/AllTransactionsTable\";\r\nimport BuySellDividendRatioGraph from \"../components/tiles/BuySellDividendRatioGraph\";\r\nimport AccessApiWrapper from \"../components/api/AccessApiWrapper\";\r\n\r\nconst accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass AllTransactionsScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData: null,\r\n            isLoaded: false\r\n        };\r\n\r\n        this.determineChartData = this.determineChartData.bind(this);\r\n    }\r\n\r\n    determineChartData(result) {\r\n        let buyCount = 0;\r\n        let sellCount = 0;\r\n        let dividendCount = 0;\r\n\r\n        result.forEach((x) => {\r\n            if ((x.type) === \"buy\") buyCount++;\r\n            if ((x.type) === \"sell\") sellCount++;\r\n            if ((x.type) === \"dividend\") dividendCount++;\r\n        });\r\n\r\n        return {\r\n            datasets: [\r\n                {\r\n                    hoverBorderColor: \"#ffffff\",\r\n                    data: [buyCount, sellCount, dividendCount],\r\n                    backgroundColor: [\r\n                        \"rgba(0,123,255,0.6)\",\r\n                        \"rgba(0,123,255,0.9)\",\r\n                        \"rgba(0,123,255,0.2)\"\r\n                    ]\r\n                }\r\n            ],\r\n            labels: [\"Buy\", \"Sell\", \"Dividend\"]\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        accessApiWrapper.getData(\"/Transaction\").then((result) => {\r\n            this.setState({\r\n                    chartData: this.determineChartData(result),\r\n                    isLoaded: true,\r\n                    transactions: result,\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {isLoaded} = this.state;\r\n\r\n        if (isLoaded)\r\n            return (\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                                   className=\"text-sm-left\"/>\r\n                    </Row>\r\n\r\n                    {/* List */}\r\n                    <Row>\r\n                        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                            <AllTransactionsTable transactions={this.state.transactions} headers={[\"Date\", \"Type\", \"Ticker\", \"X\", \"Price\", \"Total\"]}\r\n                                                  title={\"All Transactions\"}/>\r\n                        </Col>\r\n\r\n                        {/* Ratio buy/sell */}\r\n                        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\r\n                            <BuySellDividendRatioGraph chartData={this.state.chartData}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        else return (\r\n            <Container fluid className=\"main-content-container px-4\">\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                               className=\"text-sm-left\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Card small className=\"mb-4\">\r\n                        <CardHeader>\r\n                            <h1 className=\"m-0\">Loading...</h1>\r\n                        </CardHeader>\r\n                    </Card>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllTransactionsScreen;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Form,\r\n    FormInput,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    ListGroup,\r\n    ListGroupItem\r\n} from \"shards-react\";\r\nimport React, {Component} from \"react\";\r\nimport AccessApiWrapper from \"../api/AccessApiWrapper\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\n\r\nvar accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass SubmitNewTransaction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buyButtonColorIsSelected: \"primary\",\r\n            sellButtonColorIsSelected: \"secondary\",\r\n            dividendButtonColorIsSelected: \"secondary\",\r\n            quantityField: \"\",\r\n            priceField: \"\",\r\n            totalField: \"\",\r\n            type: \"buy\",\r\n            dateField: \"\"\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.handleTypeButtons = this.handleTypeButtons.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let data = {\r\n            data: {\r\n                price: parseFloat(this.state.priceField),\r\n                total: parseFloat(this.state.totalField),\r\n                quantity: parseInt(this.state.quantityField),\r\n                type: this.state.type,\r\n                ticker: this.props.ticker,\r\n                date: this.state.dateField\r\n            }\r\n        };\r\n\r\n        accessApiWrapper.postData(\"/Transaction\", data);\r\n    }\r\n\r\n    handleTypeButtons(event) {\r\n        event.preventDefault();\r\n\r\n        if (event.target.name === \"buyButton\")\r\n            this.setState({\r\n                buyButtonColorIsSelected: \"primary\",\r\n                sellButtonColorIsSelected: \"secondary\",\r\n                dividendButtonColorIsSelected: \"secondary\"\r\n            });\r\n\r\n        if (event.target.name === \"sellButton\")\r\n            this.setState({\r\n                buyButtonColorIsSelected: \"secondary\",\r\n                sellButtonColorIsSelected: \"primary\",\r\n                dividendButtonColorIsSelected: \"secondary\"\r\n            });\r\n\r\n        if (event.target.name === \"dividendButton\")\r\n            this.setState({\r\n                buyButtonColorIsSelected: \"secondary\",\r\n                sellButtonColorIsSelected: \"secondary\",\r\n                dividendButtonColorIsSelected: \"primary\"\r\n            });\r\n\r\n        this.setState({type: event.target.name});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">New Transaction</h6>\r\n                </CardHeader>\r\n\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"px-3\">\r\n                        <center className=\"mb-3\">\r\n                            <Button name=\"buy\" pill theme={this.state.buyButtonColorIsSelected}\r\n                                    onClick={this.handleTypeButtons}>Buy</Button>\r\n                            <Button name=\"sell\" pill theme={this.state.sellButtonColorIsSelected}\r\n                                    onClick={this.handleTypeButtons}>Sell</Button>\r\n                            <Button name=\"dividend\" pill theme={this.state.dividendButtonColorIsSelected}\r\n                                    onClick={this.handleTypeButtons}>Dividend</Button>\r\n                        </center>\r\n\r\n                        <div>\r\n                            <label>Date</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormInput placeholder=\"11/12/2020\" type=\"date\" name=\"dateField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n\r\n                            <label>Quantity</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormInput placeholder=\"3\" name=\"quantityField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n\r\n                            <label>Price</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroupAddon type=\"prepend\">\r\n                                    <InputGroupText>$</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <FormInput placeholder=\"$12.54\" name=\"priceField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n\r\n                            <label>Total</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroupAddon type=\"prepend\">\r\n                                    <InputGroupText>$</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <FormInput placeholder=\"$37.62\" name=\"totalField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n                        </div>\r\n\r\n                        <Form>\r\n                            <center>\r\n                                <Button onClick={this.handleFormSubmit} theme=\"primary\">Submit</Button>\r\n                            </center>\r\n                        </Form>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitNewTransaction;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\nimport StockGraph from \"../components/tiles/StockGraph\";\r\nimport SubmitNewTransaction from \"../components/tiles/SubmitNewTransaction\";\r\n\r\nconst StockOverviewScreen = ({smallStats}) => (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n            <PageTitle title=\"Some Stock Name\" subtitle=\"\" className=\"text-sm-left mb-3\"/>\r\n        </Row>\r\n\r\n        <Row>\r\n            {/* Editor */}\r\n            <Col lg=\"9\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                <StockGraph/>\r\n            </Col>\r\n\r\n            {/* Groups */}\r\n            <Col lg=\"3\" md=\"6\" sm=\"12\" className=\"mb-4\">\r\n                <SubmitNewTransaction ticker=\"test\"/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nStockOverviewScreen.propTypes = {\r\n    /**\r\n     * The small stats dataset.\r\n     */\r\n    smallStats: PropTypes.array\r\n};\r\n\r\nStockOverviewScreen.defaultProps = {\r\n    smallStats: [\r\n        {\r\n            label: \"Posts\",\r\n            value: \"2,390\",\r\n            percentage: \"4.7%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n                    borderColor: \"rgb(0, 184, 216)\",\r\n                    data: [1, 2, 1, 3, 5, 4, 7]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Pages\",\r\n            value: \"182\",\r\n            percentage: \"12.4\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(23,198,113,0.1)\",\r\n                    borderColor: \"rgb(23,198,113)\",\r\n                    data: [1, 2, 3, 3, 3, 4, 4]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Comments\",\r\n            value: \"8,147\",\r\n            percentage: \"3.8%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,180,0,0.1)\",\r\n                    borderColor: \"rgb(255,180,0)\",\r\n                    data: [2, 3, 3, 3, 4, 3, 3]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"New Customers\",\r\n            value: \"29\",\r\n            percentage: \"2.71%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                    borderColor: \"rgb(255,65,105)\",\r\n                    data: [1, 7, 1, 3, 1, 4, 8]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Subscribers\",\r\n            value: \"17,281\",\r\n            percentage: \"2.4%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgb(0,123,255,0.1)\",\r\n                    borderColor: \"rgb(0,123,255)\",\r\n                    data: [3, 2, 3, 2, 4, 5, 4]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default StockOverviewScreen;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://sartainstudios.com/\">\r\n                Sartain Studios\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function RegisterForm(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <div className={classes.form} noValidate>\r\n                    <Grid container spacing={2} hidden=\"true\">\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                onChange={props.onChange}\r\n                                error={!props.isEmailFieldValid}\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                error={!props.isUsernameFieldValid}\r\n                                onChange={props.onChange}\r\n                                autoComplete=\"username\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                onChange={props.onChange}\r\n                                fullWidth\r\n                                error={!props.isPasswordFieldValid}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"doesAgreeToTermsOfUse\" color=\"primary\"/>}\r\n                                label=\"I agree to the Terms of Use\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        hidden=\"true\"\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={props.onSubmit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"login\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright/>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport AuthenticationService from \"../authentication/services/AuthenticationService\";\r\nimport RegisterForm from \"../authentication/components/RegisterForm\";\r\n\r\nclass RegisterScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            isEmailFieldValid: true,\r\n            isUsernameFieldValid: true,\r\n            isPasswordFieldValid: true\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.AuthService = new AuthenticationService();\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.AuthService.loggedIn()) {\r\n            this.props.history.replace('/');\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        this.AuthService.register(this.state.username, this.state.password)\r\n            .then(res => {\r\n                if (res.length < 50) {\r\n                    this.setState({email: true, isUsernameFieldValid: true, isPasswordFieldValid: true})\r\n                } else {\r\n                    this.props.history.replace('/');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({email: false, isUsernameFieldValid: false, isPasswordFieldValid: false})\r\n            });\r\n    };\r\n\r\n    onChange = async event => {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <RegisterForm onChange={this.onChange} onSubmit={this.handleSubmit}\r\n                              isEmailFieldValid={this.state.isEmailFieldValid}\r\n                              isUsernameFieldValid={this.state.isUsernameFieldValid}\r\n                              isPasswordFieldValid={this.state.isPasswordFieldValid}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, {Component} from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\n\r\nexport default function withAuthentication(AuthComponent) {\r\n    const AuthService = new AuthenticationService();\r\n    return class AuthWrapped extends Component {\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                user: null\r\n            }\r\n        }\r\n\r\n        componentWillMount() {\r\n            if (!AuthService.loggedIn()) {\r\n                this.props.history.replace('/login')\r\n            } else {\r\n                try {\r\n                    const profile = AuthService.getProfile();\r\n                    this.setState({\r\n                        user: profile\r\n                    })\r\n                } catch (err) {\r\n                    AuthService.logout();\r\n                    this.props.history.replace('/login')\r\n                }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if (this.state.user) {\r\n                return (\r\n                    <AuthComponent history={this.props.history} user={this.state.user}/>\r\n                )\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://sartainstudios.com/\">\r\n                Sartain Studios\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignInForm(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <div className={classes.form}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        error={!props.isUsernameFieldValid}\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        onChange={props.onChange}\r\n                        label=\"Email Address\"\r\n                        name=\"username\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        onChange={props.onChange}\r\n                        error={!props.isPasswordFieldValid}\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={props.onSubmit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"register\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport AuthenticationService from \"../authentication/services/AuthenticationService\";\r\nimport SignInForm from \"../authentication/components/SignInForm\";\r\n\r\nclass SignInScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {username: \"\", password: \"\", isUsernameFieldValid: true, isPasswordFieldValid: true};\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.AuthService = new AuthenticationService();\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.AuthService.loggedIn()) {\r\n            this.props.history.replace('/');\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        this.AuthService.login(this.state.username, this.state.password)\r\n            .then(res => {\r\n                if (res.length < 50) {\r\n                    this.setState({isUsernameFieldValid: true, isPasswordFieldValid: true})\r\n                } else {\r\n                    this.props.history.replace('/');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({isUsernameFieldValid: false, isPasswordFieldValid: false})\r\n            });\r\n    };\r\n\r\n    onChange = async event => {\r\n        console.log(event.target.name);\r\n        console.log(event.target.value);\r\n\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <SignInForm onChange={this.onChange} onSubmit={this.handleSubmit}\r\n                            isUsernameFieldValid={this.state.isUsernameFieldValid}\r\n                            isPasswordFieldValid={this.state.isPasswordFieldValid}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInScreen;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n// Layout Types\r\nimport {DefaultLayout} from \"./components/layout/default layout\";\r\n// Route Views\r\nimport DashboardOverviewScreen from \"./pages/DashboardOverviewScreen\";\r\nimport AllTransactionsScreen from \"./pages/AllTransactionsScreen\";\r\nimport StockOverviewScreen from \"./pages/StockOverviewScreen\";\r\nimport RegisterScreen from \"./pages/RegisterScreen\";\r\nimport withAuthentication from \"./authentication/higherOrderComponents/withAuthentication\";\r\nimport Empty from \"./components/layout/default layout/Empty\";\r\nimport SignInScreen from \"./pages/SignInScreen\";\r\n\r\nexport default [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        layout: DefaultLayout,\r\n        component: () => <Redirect to=\"/dashboard-overview\"/>\r\n    },\r\n    {\r\n        path: \"/dashboard-overview\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(DashboardOverviewScreen)\r\n    },\r\n    {\r\n        path: \"/stock-overview\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(StockOverviewScreen)\r\n    },\r\n    {\r\n        path: \"/transactions-list\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(AllTransactionsScreen)\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        layout: Empty,\r\n        component: SignInScreen\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        layout: Empty,\r\n        component: RegisterScreen\r\n    }\r\n];\r\n","import React, {Component} from \"react\";\r\nimport GoogleAnalytics from \"react-ga\";\r\n\r\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\r\n\r\nconst withTracker = (WrappedComponent, options = {}) => {\r\n    const trackPage = page => {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            return;\r\n        }\r\n\r\n        GoogleAnalytics.set({\r\n            page,\r\n            ...options\r\n        });\r\n        GoogleAnalytics.pageview(page);\r\n    };\r\n\r\n    const BASENAME = process.env.REACT_APP_BASENAME || \"\";\r\n\r\n    // eslint-disable-next-line\r\n    const HOC = class extends Component {\r\n        componentDidMount() {\r\n            // eslint-disable-next-line\r\n            const page = this.props.location.pathname + this.props.location.search;\r\n            trackPage(`${BASENAME}${page}`);\r\n        }\r\n\r\n        componentDidUpdate(prevProps) {\r\n            const currentPage =\r\n                prevProps.location.pathname + prevProps.location.search;\r\n            const nextPage =\r\n                this.props.location.pathname + this.props.location.search;\r\n\r\n            if (currentPage !== nextPage) {\r\n                trackPage(`${BASENAME}${nextPage}`);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    };\r\n\r\n    return HOC;\r\n};\r\n\r\nexport default withTracker;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport withTracker from \"./withTracker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nexport default () => (\r\n    <Router basename={process.env.PUBLIC_URL || \"\"}>\r\n        <div>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    <Route\r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={withTracker(props => {\r\n                            return (\r\n                                <route.layout {...props}>\r\n                                    <route.component {...props} />\r\n                                </route.layout>\r\n                            );\r\n                        })}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    </Router>\r\n);\r\n"],"sourceRoot":""}