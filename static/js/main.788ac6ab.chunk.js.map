{"version":3,"sources":["assets/images/avatars/0.jpg","assets/images/shards-dashboards-logo.svg","components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/Notifications.js","authentication/services/AuthenticationService.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","assets/flux/constants.js","assets/flux/dispatcher.js","assets/flux/store.js","components/layout/MainSidebar/SidebarItems.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","components/layout/default layout/Default.js","components/layout/default layout/Empty.js","components/common/PageTitle.js","components/utils/chart.js","components/common/SmallStats.js","pages/DashboardOverviewScreen.js","components/api/AccessApi.js","components/tiles/AllTransactionsTable.js","components/api/AccessApiWrapper.js","pages/AllTransactionsScreen.js","components/common/RangeDatePicker.js","components/tiles/StockGraph.js","pages/StockOverviewScreen.js","components/tiles/FormValidation.js","pages/RegistrationScreen.js","authentication/higherOrderComponents/withAuthentication.js","authentication/components/LoginForm.js","routes.js","withTracker.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","NavbarSearch","react_default","a","createElement","shards_react_es","className","seamless","type","placeholder","Notifications","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","toggleNotifications","bind","assertThisInitialized","setState","onClick","pill","theme","open","React","Component","AuthenticationService","domain","fetch","login","getProfile","username","password","concat","method","body","JSON","stringify","then","res","setToken","Promise","resolve","token","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","Content-Type","loggedIn","objectSpread","_checkStatus","response","json","status","error","Error","statusText","UserActions","toggleUserActions","AuthService","tag","Dropdown","caret","toggle","NavLink","src","require","alt","DropdownMenu","right","small","Link","to","divider","logout","NavbarNav","navbar","Notifications_Notifications","UserActions_UserActions","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","htmlBefore","store","Store","registerToActions","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","handleClick","dispatch","href","MainNavbar","layout","stickyTop","classes","classNames","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","id","maxWidth","SidebarSearch","display","minHeight","aria-label","SidebarNavItem","item","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","SidebarNavItems","getSidebarItems","onChange","addChangeListener","removeChangeListener","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","layout_MainFooter","Empty","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","SmallStats","canvasRef","createRef","chartOptions","maintainAspectRatio","responsive","legend","tooltips","enabled","custom","elements","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","apply","toConsumableArray","chartData","data","chartConfig","labels","chartLabels","datasets","current","_this$props","variation","label","value","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","height","ref","shortid","create","DashboardOverviewScreen","smallStats","noGutters","common_PageTitle","stats","common_SmallStats","decrease","fill","borderWidth","backgroundColor","borderColor","authenticationService","accessApiWrapper","AccessApiWrapper","get","urlExtension","uid","react","AccessApi","window","location","includes","Authorization","result","console","log","alert","AllTransactionsTable","transactions","isLoaded","_this2","getData","header","scope","_this3","i","formatDate","date","ticker","quantity","price","total","unformattedDate","year","substring","generateHeaders","generateRows","AllTransactionsScreen","tiles_AllTransactionsTable","RangeDatePicker","startDate","undefined","endDate","handleStartDateChange","handleEndDateChange","selected","placeholderText","dropdownMode","StockGraph","position","tick","index","toFixed","hover","mode","intersect","BlogUsersOverview","buoMeta","getDatasetMeta","_model","render","common_RangeDatePicker","Array","from","_","pointBackgroundColor","pointHoverBackgroundColor","pointRadius","pointHoverRadius","borderDash","pointBorderColor","StockOverviewScreen","tiles_StockGraph","FormValidation","form","required","valid","invalid","RegistrationScreen","tiles_FormValidation","withAuthentication","AuthComponent","_Component","AuthWrapped","user","inherits","createClass","profile","history","replace","LoginForm","usernameFieldIsValid","passwordFieldIsValid","handleChange","handleFormSubmit","name","event","defineProperty","target","preventDefault","catch","routes","path","exact","component","Redirect","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","arguments","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","pathname","search","prevProps","currentPage","nextPage","Boolean","hostname","match","ReactDOM","BrowserRouter","basename","route","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.788ac6ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.73476783.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.161c7399.svg\";","import React from \"react\";\r\nimport {Form, FormInput, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nexport default () => (\r\n    <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\r\n        <InputGroup seamless className=\"ml-3\">\r\n            <InputGroupAddon type=\"prepend\">\r\n                <InputGroupText>\r\n                    <i className=\"material-icons\">search</i>\r\n                </InputGroupText>\r\n            </InputGroupAddon>\r\n            <FormInput\r\n                className=\"navbar-search\"\r\n                placeholder=\"Search for something...\"\r\n            />\r\n        </InputGroup>\r\n    </Form>\r\n);\r\n","import React from \"react\";\r\nimport {Badge, Collapse, DropdownItem, NavItem, NavLink} from \"shards-react\";\r\n\r\nexport default class Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.toggleNotifications = this.toggleNotifications.bind(this);\r\n    }\r\n\r\n    toggleNotifications() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavItem className=\"border-right dropdown notifications\">\r\n                <NavLink\r\n                    className=\"nav-link-icon text-center\"\r\n                    onClick={this.toggleNotifications}\r\n                >\r\n                    <div className=\"nav-link-icon__wrapper\">\r\n                        <i className=\"material-icons\">&#xE7F4;</i>\r\n                        <Badge pill theme=\"danger\">\r\n                            2\r\n                        </Badge>\r\n                    </div>\r\n                </NavLink>\r\n                <Collapse\r\n                    open={this.state.visible}\r\n                    className=\"dropdown-menu dropdown-menu-small\"\r\n                >\r\n                    <DropdownItem>\r\n                        <div className=\"notification__icon-wrapper\">\r\n                            <div className=\"notification__icon\">\r\n                                <i className=\"material-icons\">&#xE6E1;</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"notification__content\">\r\n                            <span className=\"notification__category\">Analytics</span>\r\n                            <p>\r\n                                Your website’s active users count increased by{\" \"}\r\n                                <span className=\"text-success text-semibold\">28%</span> in the\r\n                                last week. Great job!\r\n                            </p>\r\n                        </div>\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                        <div className=\"notification__icon-wrapper\">\r\n                            <div className=\"notification__icon\">\r\n                                <i className=\"material-icons\">&#xE8D1;</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"notification__content\">\r\n                            <span className=\"notification__category\">Sales</span>\r\n                            <p>\r\n                                Last week your store’s sales count decreased by{\" \"}\r\n                                <span className=\"text-danger text-semibold\">5.52%</span>. It\r\n                                could have been worse!\r\n                            </p>\r\n                        </div>\r\n                    </DropdownItem>\r\n                    <DropdownItem className=\"notification__all text-center\">\r\n                        View all Notifications\r\n                    </DropdownItem>\r\n                </Collapse>\r\n            </NavItem>\r\n        );\r\n    }\r\n}\r\n","import decode from 'jwt-decode';\r\n\r\nexport default class AuthenticationService {\r\n    constructor() {\r\n        this.domain = 'https://sartain-studios-api.com:10101';\r\n        this.fetch = this.fetch.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.fetch(`${this.domain}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        }).then(res => {\r\n            this.setToken(res);\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            return decoded.exp < Date.now() / 1000;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setToken(idToken) {\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n    }\r\n\r\n    getProfile() {\r\n        // Using jwt-decode npm package to decode the token\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    fetch(url, options) {\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Collapse, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, NavItem, NavLink} from \"shards-react\";\r\nimport AuthenticationService from \"../../../../authentication/services/AuthenticationService\";\r\n\r\nexport default class UserActions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.toggleUserActions = this.toggleUserActions.bind(this);\r\n    }\r\n\r\n    toggleUserActions() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const AuthService = new AuthenticationService();\r\n\r\n        return (\r\n            <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n                <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n                    <img\r\n                        className=\"user-avatar rounded-circle mr-2\"\r\n                        src={require(\"../../../../assets/images/avatars/0.jpg\")}\r\n                        alt=\"User Avatar\"\r\n                    />{\" \"}\r\n                    <span className=\"d-none d-md-inline-block\">Sierra Brooks</span>\r\n                </DropdownToggle>\r\n                <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n                    <DropdownItem tag={Link} to=\"user-profile\">\r\n                        <i className=\"material-icons\">&#xE7FD;</i> Account\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"edit-user-profile\">\r\n                        <i className=\"material-icons\">&#xE8B8;</i> Settings\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"file-manager-list\">\r\n                        <i className=\"material-icons\">&#xE2C7;</i> Files\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"transaction-history\">\r\n                        <i className=\"material-icons\">&#xE896;</i> Transactions\r\n                    </DropdownItem>\r\n                    <DropdownItem divider/>\r\n                    <DropdownItem tag={Link} to=\"/\" className=\"text-danger\" onClick={AuthService.logout}>\r\n                        <i className=\"material-icons text-danger\">&#xE879;</i> Logout\r\n                    </DropdownItem>\r\n                </Collapse>\r\n            </NavItem>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Nav} from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n    <Nav navbar className=\"border-left flex-row\">\r\n        <Notifications/>\r\n        <UserActions/>\r\n    </Nav>\r\n);\r\n","export default {\r\n    CHANGE: \"CHANGE\",\r\n    TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\r\n};\r\n","import {Dispatcher} from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","import {EventEmitter} from \"events\";\r\n\r\nimport Dispatcher from \"./dispatcher\";\r\nimport Constants from \"./constants\";\r\nimport getSidebarNavItems from \"../../components/layout/MainSidebar/SidebarItems\";\r\n\r\nlet _store = {\r\n    menuVisible: false,\r\n    navItems: getSidebarNavItems()\r\n};\r\n\r\nclass Store extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.registerToActions = this.registerToActions.bind(this);\r\n        this.toggleSidebar = this.toggleSidebar.bind(this);\r\n\r\n        Dispatcher.register(this.registerToActions.bind(this));\r\n    }\r\n\r\n    registerToActions({actionType, payload}) {\r\n        switch (actionType) {\r\n            case Constants.TOGGLE_SIDEBAR:\r\n                this.toggleSidebar();\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    toggleSidebar() {\r\n        _store.menuVisible = !_store.menuVisible;\r\n        this.emit(Constants.CHANGE);\r\n    }\r\n\r\n    getMenuState() {\r\n        return _store.menuVisible;\r\n    }\r\n\r\n    getSidebarItems() {\r\n        return _store.navItems;\r\n    }\r\n\r\n    addChangeListener(callback) {\r\n        this.on(Constants.CHANGE, callback);\r\n    }\r\n\r\n    removeChangeListener(callback) {\r\n        this.removeListener(Constants.CHANGE, callback);\r\n    }\r\n}\r\n\r\nexport default new Store();\r\n","export default function () {\r\n    return [\r\n        {\r\n            title: \"Dashboard\",\r\n            to: \"/dashboard-overview\",\r\n            htmlBefore: '<i class=\"material-icons\">table_chart</i>'\r\n        },\r\n        {\r\n            title: \"Stock Overview\",\r\n            to: \"/stock-overview\",\r\n            htmlBefore: '<i class=\"material-icons\">vertical_split</i>'\r\n        },\r\n        {\r\n            title: \"Transactions\",\r\n            to: \"/transactions-list\",\r\n            htmlBefore: '<i class=\"material-icons\">view_module</i>'\r\n        }\r\n    ];\r\n}\r\n","import React from \"react\";\r\n\r\nimport {Constants, Dispatcher} from \"../../../assets/flux\";\r\n\r\nclass NavbarToggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        Dispatcher.dispatch({\r\n            actionType: Constants.TOGGLE_SIDEBAR\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"nav\">\r\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                <a href=\"#\" onClick={this.handleClick}\r\n                   className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\r\n                    <i className=\"material-icons\">&#xE5D2;</i>\r\n                </a>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {Container, Navbar} from \"shards-react\";\r\n\r\nimport NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({layout, stickyTop}) => {\r\n    const classes = classNames(\r\n        \"main-navbar\",\r\n        \"bg-white\",\r\n        stickyTop && \"sticky-top\"\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <Container className=\"p-0\">\r\n                <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n                    <NavbarSearch/>\r\n                    <NavbarNav/>\r\n                    <NavbarToggle/>\r\n                </Navbar>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n    /**\r\n     * The layout type where the MainNavbar is used.\r\n     */\r\n    layout: PropTypes.string,\r\n    /**\r\n     * Whether the main Navbar is sticky to the top, or not.\r\n     */\r\n    stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n    stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Navbar, NavbarBrand} from \"shards-react\";\r\n\r\nimport {Constants, Dispatcher} from \"../../../assets/flux\";\r\n\r\nclass SidebarMainNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\r\n    }\r\n\r\n    handleToggleSidebar() {\r\n        Dispatcher.dispatch({\r\n            actionType: Constants.TOGGLE_SIDEBAR\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {hideLogoText} = this.props;\r\n        return (\r\n            <div className=\"main-navbar\">\r\n                <Navbar\r\n                    className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\r\n                    type=\"light\"\r\n                >\r\n                    <NavbarBrand\r\n                        className=\"w-100 mr-0\"\r\n                        href=\"#\"\r\n                        style={{lineHeight: \"25px\"}}\r\n                    >\r\n                        <div className=\"d-table m-auto\">\r\n                            <img\r\n                                id=\"main-logo\"\r\n                                className=\"d-inline-block align-top mr-1\"\r\n                                style={{maxWidth: \"25px\"}}\r\n                                src={require(\"../../../assets/images/shards-dashboards-logo.svg\")}\r\n                                alt=\"Investment Tracker Dashboard\"\r\n                            />\r\n                            {!hideLogoText && (<span className=\"d-none d-md-inline ml-1\">Investment Tracker</span>\r\n                            )}\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    {/* eslint-disable-next-line */}\r\n                    <a\r\n                        className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\r\n                        onClick={this.handleToggleSidebar}\r\n                    >\r\n                        <i className=\"material-icons\">&#xE5C4;</i>\r\n                    </a>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarMainNavbar.propTypes = {\r\n    /**\r\n     * Whether to hide the logo text, or not.\r\n     */\r\n    hideLogoText: PropTypes.bool\r\n};\r\n\r\nSidebarMainNavbar.defaultProps = {\r\n    hideLogoText: false\r\n};\r\n\r\nexport default SidebarMainNavbar;\r\n","import React from \"react\";\r\nimport {Form, FormInput, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nexport default () => (\r\n    <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\"\r\n          style={{display: \"flex\", minHeight: \"45px\"}}>\r\n        <InputGroup seamless className=\"ml-3\">\r\n            <InputGroupAddon type=\"prepend\">\r\n                <InputGroupText>\r\n                    <i className=\"material-icons\">search</i>\r\n                </InputGroupText>\r\n                <FormInput\r\n                    className=\"navbar-search\"\r\n                    placeholder=\"Search for something...\"\r\n                    aria-label=\"Search\"\r\n                />\r\n            </InputGroupAddon>\r\n        </InputGroup>\r\n    </Form>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {NavLink as RouteNavLink} from \"react-router-dom\";\r\nimport {NavItem, NavLink} from \"shards-react\";\r\n\r\nconst SidebarNavItem = ({item}) => (\r\n    <NavItem>\r\n        <NavLink tag={RouteNavLink} to={item.to}>\r\n            {item.htmlBefore && (\r\n                <div\r\n                    className=\"d-inline-block item-icon-wrapper\"\r\n                    dangerouslySetInnerHTML={{__html: item.htmlBefore}}\r\n                />\r\n            )}\r\n            {item.title && <span>{item.title}</span>}\r\n            {item.htmlAfter && (\r\n                <div\r\n                    className=\"d-inline-block item-icon-wrapper\"\r\n                    dangerouslySetInnerHTML={{__html: item.htmlAfter}}\r\n                />\r\n            )}\r\n        </NavLink>\r\n    </NavItem>\r\n);\r\n\r\nSidebarNavItem.propTypes = {\r\n    /**\r\n     * The item object.\r\n     */\r\n    item: PropTypes.object\r\n};\r\n\r\nexport default SidebarNavItem;\r\n","import React from \"react\";\r\nimport {Nav} from \"shards-react\";\r\n\r\nimport SidebarNavItem from \"./SidebarNavItem\";\r\nimport {Store} from \"../../../assets/flux\";\r\n\r\nclass SidebarNavItems extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            navItems: Store.getSidebarItems()\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        Store.addChangeListener(this.onChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Store.removeChangeListener(this.onChange);\r\n    }\r\n\r\n    onChange() {\r\n        this.setState({\r\n            ...this.state,\r\n            navItems: Store.getSidebarItems()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {navItems: items} = this.state;\r\n        return (\r\n            <div className=\"nav-wrapper\">\r\n                <Nav className=\"nav--no-borders flex-column\">\r\n                    {items.map((item, idx) => (\r\n                        <SidebarNavItem key={idx} item={item}/>\r\n                    ))}\r\n                </Nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarNavItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {Col} from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\nimport SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport {Store} from \"../../../assets/flux\";\r\n\r\nclass MainSidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menuVisible: false,\r\n            sidebarNavItems: Store.getSidebarItems()\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        Store.addChangeListener(this.onChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Store.removeChangeListener(this.onChange);\r\n    }\r\n\r\n    onChange() {\r\n        this.setState({\r\n            ...this.state,\r\n            menuVisible: Store.getMenuState(),\r\n            sidebarNavItems: Store.getSidebarItems()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classes = classNames(\r\n            \"main-sidebar\",\r\n            \"px-0\",\r\n            \"col-12\",\r\n            this.state.menuVisible && \"open\"\r\n        );\r\n\r\n        return (\r\n            <Col\r\n                tag=\"aside\"\r\n                className={classes}\r\n                lg={{size: 2}}\r\n                md={{size: 3}}\r\n            >\r\n                <SidebarMainNavbar hideLogoText={this.props.hideLogoText}/>\r\n                <SidebarSearch/>\r\n                <SidebarNavItems/>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n    /**\r\n     * Whether to hide the logo text, or not.\r\n     */\r\n    hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n    hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Container, Nav, NavItem, NavLink, Row} from \"shards-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MainFooter = ({contained, menuItems, copyright}) => (\r\n    <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\r\n        <Container fluid={contained}>\r\n            <Row>\r\n                <Nav>\r\n                    {menuItems.map((item, idx) => (\r\n                        <NavItem key={idx}>\r\n                            <NavLink tag={Link} to={item.to}>\r\n                                {item.title}\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    ))}\r\n                </Nav>\r\n                <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n);\r\n\r\nMainFooter.propTypes = {\r\n    /**\r\n     * Whether the content is contained, or not.\r\n     */\r\n    contained: PropTypes.bool,\r\n    /**\r\n     * The menu items array.\r\n     */\r\n    menuItems: PropTypes.array,\r\n    /**\r\n     * The copyright info.\r\n     */\r\n    copyright: PropTypes.string\r\n};\r\n\r\nMainFooter.defaultProps = {\r\n    contained: false,\r\n    copyright: \"Sartain Studios\",\r\n    menuItems: [\r\n        {\r\n            title: \"Home\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"Services\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"About\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"Products\",\r\n            to: \"#\"\r\n        }\r\n    ]\r\n};\r\n\r\nexport default MainFooter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport MainNavbar from \"../MainNavbar/MainNavbar\";\r\nimport MainSidebar from \"../MainSidebar/MainSidebar\";\r\nimport MainFooter from \"../MainFooter\";\r\n\r\nconst DefaultLayout = ({children, noNavbar, noFooter}) => (\r\n    <Container fluid>\r\n        <Row>\r\n            <MainSidebar/>\r\n            <Col\r\n                className=\"main-content p-0\"\r\n                lg={{size: 10, offset: 2}}\r\n                md={{size: 9, offset: 3}}\r\n                sm=\"12\"\r\n                tag=\"main\"\r\n            >\r\n                {!noNavbar && <MainNavbar/>}\r\n                {children}\r\n                {!noFooter && <MainFooter/>}\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nDefaultLayout.propTypes = {\r\n    /**\r\n     * Whether to display the Navbar, or not.\r\n     */\r\n    noNavbar: PropTypes.bool,\r\n    /**\r\n     * Whether to display the footer, or not.\r\n     */\r\n    noFooter: PropTypes.bool\r\n};\r\n\r\nDefaultLayout.defaultProps = {\r\n    noNavbar: false,\r\n    noFooter: false\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Empty = ({children, noNavbar, noFooter}) => (\r\n    <div>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nEmpty.propTypes = {\r\n    /**\r\n     * Whether to display the Navbar, or not.\r\n     */\r\n    noNavbar: PropTypes.bool,\r\n    /**\r\n     * Whether to display the footer, or not.\r\n     */\r\n    noFooter: PropTypes.bool\r\n};\r\n\r\nEmpty.defaultProps = {\r\n    noNavbar: false,\r\n    noFooter: false\r\n};\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col} from \"shards-react\";\r\n\r\nconst PageTitle = ({title, subtitle, className, ...attrs}) => {\r\n    const classes = classNames(\r\n        className,\r\n        \"text-center\",\r\n        \"text-md-left\",\r\n        \"mb-sm-0\"\r\n    );\r\n\r\n    return (\r\n        <Col xs=\"12\" sm=\"4\" className={classes} {...attrs}>\r\n            <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\r\n            <h3 className=\"page-title\">{title}</h3>\r\n        </Col>\r\n    )\r\n};\r\n\r\nPageTitle.propTypes = {\r\n    /**\r\n     * The page title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The page subtitle.\r\n     */\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","import Chart from 'chart.js';\r\n\r\nChart.defaults.LineWithLine = Chart.defaults.line;\r\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\r\n    draw(ease) {\r\n        Chart.controllers.line.prototype.draw.call(this, ease);\r\n\r\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n            const activePoint = this.chart.tooltip._active[0];\r\n            const {ctx} = this.chart;\r\n            const {x} = activePoint.tooltipPosition();\r\n            const topY = this.chart.scales['y-axis-0'].top;\r\n            const bottomY = this.chart.scales['y-axis-0'].bottom;\r\n\r\n            // Draw the line\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, topY);\r\n            ctx.lineTo(x, bottomY);\r\n            ctx.lineWidth = 0.5;\r\n            ctx.strokeStyle = '#ddd';\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        }\r\n    },\r\n});\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport shortid from \"shortid\";\r\nimport {Card, CardBody} from \"shards-react\";\r\n\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass SmallStats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartOptions = {\r\n            ...{\r\n                maintainAspectRatio: true,\r\n                responsive: true,\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    enabled: false,\r\n                    custom: false\r\n                },\r\n                elements: {\r\n                    point: {\r\n                        radius: 0\r\n                    },\r\n                    line: {\r\n                        tension: 0.33\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            ticks: {\r\n                                display: false\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            scaleLabel: false,\r\n                            ticks: {\r\n                                display: false,\r\n                                isplay: false,\r\n                                // Avoid getting the graph line cut of at the top of the canvas.\r\n                                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\r\n                                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            ...this.props.chartOptions\r\n        };\r\n\r\n        const chartConfig = {\r\n            ...{\r\n                type: \"line\",\r\n                data: {\r\n                    ...{\r\n                        labels: this.props.chartLabels\r\n                    },\r\n                    ...{\r\n                        datasets: this.props.chartData\r\n                    }\r\n                },\r\n                options: chartOptions\r\n            },\r\n            ...this.props.chartConfig\r\n        };\r\n\r\n        new Chart(this.canvasRef.current, chartConfig);\r\n    }\r\n\r\n    render() {\r\n        const {variation, label, value, percentage, increase} = this.props;\r\n\r\n        const cardClasses = classNames(\r\n            \"stats-small\",\r\n            variation && `stats-small--${variation}`\r\n        );\r\n\r\n        const cardBodyClasses = classNames(\r\n            variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\r\n        );\r\n\r\n        const innerWrapperClasses = classNames(\r\n            \"d-flex\",\r\n            variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\r\n        );\r\n\r\n        const dataFieldClasses = classNames(\r\n            \"stats-small__data\",\r\n            variation === \"1\" && \"text-center\"\r\n        );\r\n\r\n        const labelClasses = classNames(\r\n            \"stats-small__label\",\r\n            \"text-uppercase\",\r\n            variation !== \"1\" && \"mb-1\"\r\n        );\r\n\r\n        const valueClasses = classNames(\r\n            \"stats-small__value\",\r\n            \"count\",\r\n            variation === \"1\" ? \"my-3\" : \"m-0\"\r\n        );\r\n\r\n        const innerDataFieldClasses = classNames(\r\n            \"stats-small__data\",\r\n            variation !== \"1\" && \"text-right align-items-center\"\r\n        );\r\n\r\n        const percentageClasses = classNames(\r\n            \"stats-small__percentage\",\r\n            `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\r\n        );\r\n\r\n        const canvasHeight = variation === \"1\" ? 120 : 60;\r\n\r\n        return (\r\n            <Card small className={cardClasses}>\r\n                <CardBody className={cardBodyClasses}>\r\n                    <div className={innerWrapperClasses}>\r\n                        <div className={dataFieldClasses}>\r\n                            <span className={labelClasses}>{label}</span>\r\n                            <h6 className={valueClasses}>{value}</h6>\r\n                        </div>\r\n                        <div className={innerDataFieldClasses}>\r\n                            <span className={percentageClasses}>{percentage}</span>\r\n                        </div>\r\n                    </div>\r\n                    <canvas\r\n                        height={canvasHeight}\r\n                        ref={this.canvasRef}\r\n                        className={`stats-small-${shortid()}`}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nSmallStats.propTypes = {\r\n    /**\r\n     * The Small Stats variation.\r\n     */\r\n    variation: PropTypes.string,\r\n    /**\r\n     * The label.\r\n     */\r\n    label: PropTypes.string,\r\n    /**\r\n     * The value.\r\n     */\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    /**\r\n     * The percentage number or string.\r\n     */\r\n    percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    /**\r\n     * Whether is a value increase, or not.\r\n     */\r\n    increase: PropTypes.bool,\r\n    /**\r\n     * The Chart.js configuration object.\r\n     */\r\n    chartConfig: PropTypes.object,\r\n    /**\r\n     * The Chart.js options object.\r\n     */\r\n    chartOptions: PropTypes.object,\r\n    /**\r\n     * The chart data.\r\n     */\r\n    chartData: PropTypes.array.isRequired,\r\n    /**\r\n     * The chart labels.\r\n     */\r\n    chartLabels: PropTypes.array\r\n};\r\n\r\nSmallStats.defaultProps = {\r\n    increase: true,\r\n    percentage: 0,\r\n    value: 0,\r\n    label: \"Label\",\r\n    chartOptions: Object.create(null),\r\n    chartConfig: Object.create(null),\r\n    chartData: [],\r\n    chartLabels: []\r\n};\r\n\r\nexport default SmallStats;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\nimport SmallStats from \"./../components/common/SmallStats\";\r\n\r\nconst DashboardOverviewScreen = ({smallStats}) => (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n            <PageTitle title=\"Overview\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\"/>\r\n        </Row>\r\n\r\n        {/* Small Stats Blocks */}\r\n        <Row>\r\n            {smallStats.map((stats, idx) => (\r\n                <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\r\n                    <SmallStats\r\n                        id={`small-stats-${idx}`}\r\n                        variation=\"1\"\r\n                        chartData={stats.datasets}\r\n                        chartLabels={stats.chartLabels}\r\n                        label={stats.label}\r\n                        value={stats.value}\r\n                        percentage={stats.percentage}\r\n                        increase={stats.increase}\r\n                        decrease={stats.decrease}\r\n                    />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nDashboardOverviewScreen.propTypes = {\r\n    /**\r\n     * The small stats dataset.\r\n     */\r\n    smallStats: PropTypes.array\r\n};\r\n\r\nDashboardOverviewScreen.defaultProps = {\r\n    smallStats: [\r\n        {\r\n            label: \"Posts\",\r\n            value: \"2,390\",\r\n            percentage: \"4.7%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n                    borderColor: \"rgb(0, 184, 216)\",\r\n                    data: [1, 2, 1, 3, 5, 4, 7]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Pages\",\r\n            value: \"182\",\r\n            percentage: \"12.4\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(23,198,113,0.1)\",\r\n                    borderColor: \"rgb(23,198,113)\",\r\n                    data: [1, 2, 3, 3, 3, 4, 4]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Comments\",\r\n            value: \"8,147\",\r\n            percentage: \"3.8%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,180,0,0.1)\",\r\n                    borderColor: \"rgb(255,180,0)\",\r\n                    data: [2, 3, 3, 3, 4, 3, 3]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"New Customers\",\r\n            value: \"29\",\r\n            percentage: \"2.71%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                    borderColor: \"rgb(255,65,105)\",\r\n                    data: [1, 7, 1, 3, 1, 4, 8]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Subscribers\",\r\n            value: \"17,281\",\r\n            percentage: \"2.4%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgb(0,123,255,0.1)\",\r\n                    borderColor: \"rgb(0,123,255)\",\r\n                    data: [3, 2, 3, 2, 4, 5, 4]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default DashboardOverviewScreen;\r\n","import * as React from \"react\";\r\nimport AuthenticationService from \"../../authentication/services/AuthenticationService\";\r\n\r\nvar authenticationService = new AuthenticationService();\r\n\r\nclass AccessApi extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let baseUrlTest = \"https://sartain-studios-api.com:10101/\";//https://localhost:44344/\";\r\n        let baseUrlProd = \"https://sartain-studios-api.com:10100/\";\r\n\r\n        this.state = {\r\n            url: window.location.href.includes(\"localhost\") ?\r\n                baseUrlTest :\r\n                baseUrlProd\r\n        };\r\n    }\r\n\r\n    getData(urlExtension) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        const headers = {'Authorization': 'Bearer ' + authenticationService.getToken()};\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url, {headers})\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(result)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    postData(urlExtension, data) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            console.log(result);\r\n                            alert(result.error);\r\n                            return resolve(result)\r\n                        },\r\n                        (error) => {\r\n                            alert(error);\r\n                            return resolve(error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteData(urlExtension, uid) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url + uid, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(\"Deleted: \" + uid)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(\"Failed to delete: \" + uid + \" error: \" + error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>AccessFirebase</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessApi;\r\n","import React from \"react\";\r\nimport {Card, CardBody, CardHeader} from \"shards-react\";\r\nimport AccessApiWrapper from \"../api/AccessApiWrapper\";\r\n\r\nvar accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass AllTransactionsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            transactions: [],\r\n            headers: [\"Date\", \"Type\", \"Ticker\", \"X\", \"Price\", \"Total\"],\r\n            title: \"All Transactions\",\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        accessApiWrapper.getData(\"Transaction\").then((result) => {\r\n            this.setState({transactions: result, isLoaded: true})\r\n        });\r\n    }\r\n\r\n    generateHeaders() {\r\n        return this.state.headers.map((header) => (<th scope=\"col\" className=\"border-0\">{header}</th>));\r\n    }\r\n\r\n    generateRows() {\r\n        return this.state.transactions.map((x, i) => (\r\n                <tr>\r\n                    <td>{this.formatDate(x.date)}</td>\r\n                    <td>{x.type}</td>\r\n                    <td>{x.ticker}</td>\r\n                    <td>{x.quantity}</td>\r\n                    <td>${x.price}</td>\r\n                    <td>${x.total}</td>\r\n                </tr>\r\n            )\r\n        );\r\n    }\r\n\r\n    formatDate(unformattedDate) {\r\n        let year = unformattedDate.substring(0, 4);\r\n        let month = unformattedDate.substring(5, 7);\r\n        let day = unformattedDate.substring(8, 10);\r\n\r\n        return month + \"/\" + day + \"/\" + year;\r\n    }\r\n\r\n    render() {\r\n        let isLoaded = this.state.isLoaded;\r\n\r\n        if (isLoaded) {\r\n            return (\r\n                <Card small className=\"mb-4\">\r\n                    <CardHeader className=\"border-bottom\">\r\n                        <h6 className=\"m-0\">{this.state.title}</h6>\r\n                    </CardHeader>\r\n                    <CardBody className=\"p-0 pb-3\">\r\n                        <table className=\"table mb-0\">\r\n                            <thead className=\"bg-light\">\r\n                            <tr>\r\n                                {this.generateHeaders()}\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.generateRows()}\r\n                            </tbody>\r\n                        </table>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        } else {\r\n            return (<p>Not yet loaded</p>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default AllTransactionsTable;\r\n","import * as React from \"react\";\r\nimport AccessAPI from \"./AccessApi\";\r\n\r\nclass AccessApiWrapper extends AccessAPI {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getData(item) {\r\n        return super.getData(item);\r\n    }\r\n\r\n    postData(urlExtension, data) {\r\n        return super.postData(urlExtension, data);\r\n    }\r\n\r\n    deleteData(urlExtension, uid) {\r\n        return super.deleteData(urlExtension, uid);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>AccessAPIWrapper</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessApiWrapper;\r\n","import React from \"react\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AllTransactionsTable from \"../components/tiles/AllTransactionsTable\";\r\n\r\nconst AllTransactionsScreen = () => (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n            <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\" className=\"text-sm-left\"/>\r\n        </Row>\r\n\r\n        {/* List */}\r\n        <Row>\r\n            <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                <AllTransactionsTable/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default AllTransactionsScreen;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {DatePicker, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nimport \"../../assets/css/range-date-picker.css\";\r\n\r\nclass RangeDatePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            startDate: undefined,\r\n            endDate: undefined\r\n        };\r\n\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n    }\r\n\r\n    handleStartDateChange(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            ...{startDate: new Date(value)}\r\n        });\r\n    }\r\n\r\n    handleEndDateChange(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            ...{endDate: new Date(value)}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {className} = this.props;\r\n        const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\r\n\r\n        return (\r\n            <InputGroup className={classes}>\r\n                <DatePicker\r\n                    size=\"sm\"\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleStartDateChange}\r\n                    placeholderText=\"Start Date\"\r\n                    dropdownMode=\"select\"\r\n                    className=\"text-center\"\r\n                />\r\n                <DatePicker\r\n                    size=\"sm\"\r\n                    selected={this.state.endDate}\r\n                    onChange={this.handleEndDateChange}\r\n                    placeholderText=\"End Date\"\r\n                    dropdownMode=\"select\"\r\n                    className=\"text-center\"\r\n                />\r\n                <InputGroupAddon type=\"append\">\r\n                    <InputGroupText>\r\n                        <i className=\"material-icons\">&#xE916;</i>\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeDatePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Button, Card, CardBody, CardHeader, Col, Row} from \"shards-react\";\r\n\r\nimport RangeDatePicker from \"../common/RangeDatePicker\";\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass StockGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartOptions = {\r\n            ...{\r\n                responsive: true,\r\n                legend: {\r\n                    position: \"top\"\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        // A higher value makes the line look skewed at this ratio.\r\n                        tension: 0.3\r\n                    },\r\n                    point: {\r\n                        radius: 0\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            ticks: {\r\n                                callback(tick, index) {\r\n                                    // Jump every 7 values on the X axis labels to avoid clutter.\r\n                                    return index % 7 !== 0 ? \"\" : tick;\r\n                                }\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            ticks: {\r\n                                suggestedMax: 45,\r\n                                callback(tick) {\r\n                                    if (tick === 0) {\r\n                                        return tick;\r\n                                    }\r\n                                    // Format the amounts using Ks for thousands.\r\n                                    return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                hover: {\r\n                    mode: \"nearest\",\r\n                    intersect: false\r\n                },\r\n                tooltips: {\r\n                    custom: false,\r\n                    mode: \"nearest\",\r\n                    intersect: false\r\n                }\r\n            },\r\n            ...this.props.chartOptions\r\n        };\r\n\r\n        const BlogUsersOverview = new Chart(this.canvasRef.current, {\r\n            type: \"LineWithLine\",\r\n            data: this.props.chartData,\r\n            options: chartOptions\r\n        });\r\n\r\n        // They can still be triggered on hover.\r\n        const buoMeta = BlogUsersOverview.getDatasetMeta(0);\r\n        buoMeta.data[0]._model.radius = 0;\r\n        buoMeta.data[\r\n        this.props.chartData.datasets[0].data.length - 1\r\n            ]._model.radius = 0;\r\n\r\n        // Render the chart.\r\n        BlogUsersOverview.render();\r\n    }\r\n\r\n    render() {\r\n        const {title} = this.props;\r\n        return (\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0\">\r\n                    <Row className=\"border-bottom py-2 bg-light\">\r\n                        <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\r\n                            <RangeDatePicker/>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\r\n                            >\r\n                                View Full Screen &rarr;\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <canvas\r\n                        height=\"120\"\r\n                        ref={this.canvasRef}\r\n                        style={{maxWidth: \"100% !important\"}}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nStockGraph.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart dataset.\r\n     */\r\n    chartData: PropTypes.object,\r\n    /**\r\n     * The Chart.js options.\r\n     */\r\n    chartOptions: PropTypes.object\r\n};\r\n\r\nStockGraph.defaultProps = {\r\n    title: \"Overview\",\r\n    chartData: {\r\n        labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\r\n        datasets: [\r\n            {\r\n                label: \"Current Month\",\r\n                fill: \"start\",\r\n                data: [\r\n                    500,\r\n                    800,\r\n                    320,\r\n                    180,\r\n                    240,\r\n                    320,\r\n                    230,\r\n                    650,\r\n                    590,\r\n                    1200,\r\n                    750,\r\n                    940,\r\n                    1420,\r\n                    1200,\r\n                    960,\r\n                    1450,\r\n                    1820,\r\n                    2800,\r\n                    2102,\r\n                    1920,\r\n                    3920,\r\n                    3202,\r\n                    3140,\r\n                    2800,\r\n                    3200,\r\n                    3200,\r\n                    3400,\r\n                    2910,\r\n                    3100,\r\n                    4250\r\n                ],\r\n                backgroundColor: \"rgba(0,123,255,0.1)\",\r\n                borderColor: \"rgba(0,123,255,1)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointHoverBackgroundColor: \"rgb(0,123,255)\",\r\n                borderWidth: 1.5,\r\n                pointRadius: 0,\r\n                pointHoverRadius: 3\r\n            },\r\n            {\r\n                label: \"Past Month\",\r\n                fill: \"start\",\r\n                data: [\r\n                    380,\r\n                    430,\r\n                    120,\r\n                    230,\r\n                    410,\r\n                    740,\r\n                    472,\r\n                    219,\r\n                    391,\r\n                    229,\r\n                    400,\r\n                    203,\r\n                    301,\r\n                    380,\r\n                    291,\r\n                    620,\r\n                    700,\r\n                    300,\r\n                    630,\r\n                    402,\r\n                    320,\r\n                    380,\r\n                    289,\r\n                    410,\r\n                    300,\r\n                    530,\r\n                    630,\r\n                    720,\r\n                    780,\r\n                    1200\r\n                ],\r\n                backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                borderColor: \"rgba(255,65,105,1)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\r\n                borderDash: [3, 3],\r\n                borderWidth: 1,\r\n                pointRadius: 0,\r\n                pointHoverRadius: 2,\r\n                pointBorderColor: \"rgba(255,65,105,1)\"\r\n            }\r\n        ]\r\n    }\r\n};\r\n\r\nexport default StockGraph;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\nimport StockGraph from \"../components/tiles/StockGraph\";\r\n\r\nconst StockOverviewScreen = ({smallStats}) => (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n            <PageTitle title=\"Some Stock Name\" subtitle=\"\" className=\"text-sm-left mb-3\"/>\r\n        </Row>\r\n\r\n        <Row>\r\n            {/* Editor */}\r\n            <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                <StockGraph/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nStockOverviewScreen.propTypes = {\r\n    /**\r\n     * The small stats dataset.\r\n     */\r\n    smallStats: PropTypes.array\r\n};\r\n\r\nStockOverviewScreen.defaultProps = {\r\n    smallStats: [\r\n        {\r\n            label: \"Posts\",\r\n            value: \"2,390\",\r\n            percentage: \"4.7%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n                    borderColor: \"rgb(0, 184, 216)\",\r\n                    data: [1, 2, 1, 3, 5, 4, 7]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Pages\",\r\n            value: \"182\",\r\n            percentage: \"12.4\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(23,198,113,0.1)\",\r\n                    borderColor: \"rgb(23,198,113)\",\r\n                    data: [1, 2, 3, 3, 3, 4, 4]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Comments\",\r\n            value: \"8,147\",\r\n            percentage: \"3.8%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,180,0,0.1)\",\r\n                    borderColor: \"rgb(255,180,0)\",\r\n                    data: [2, 3, 3, 3, 4, 3, 3]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"New Customers\",\r\n            value: \"29\",\r\n            percentage: \"2.71%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                    borderColor: \"rgb(255,65,105)\",\r\n                    data: [1, 7, 1, 3, 1, 4, 8]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Subscribers\",\r\n            value: \"17,281\",\r\n            percentage: \"2.4%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgb(0,123,255,0.1)\",\r\n                    borderColor: \"rgb(0,123,255)\",\r\n                    data: [3, 2, 3, 2, 4, 5, 4]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default StockOverviewScreen;\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Form,\r\n    FormFeedback,\r\n    FormGroup,\r\n    FormInput,\r\n    FormSelect,\r\n    Row\r\n} from \"shards-react\";\r\n\r\nconst FormValidation = () => (\r\n    <Card small className=\"h-100\">\r\n        <CardBody>\r\n            <Form>\r\n                <h5>Register</h5>\r\n\r\n                <Row form>\r\n                    <Col md=\"6\" className=\"form-group\">\r\n                        <FormInput\r\n                            placeholder=\"First name\"\r\n                            required\r\n                            valid\r\n                            onChange={() => {\r\n                            }}\r\n                        />\r\n                        <FormFeedback valid>The first name looks good!</FormFeedback>\r\n                    </Col>\r\n                    <Col md=\"6\" className=\"form-group\">\r\n                        <FormInput\r\n                            placeholder=\"Last name\"\r\n                            required\r\n                            valid\r\n                            onChange={() => {\r\n                            }}\r\n                        />\r\n                        <FormFeedback valid>The last name looks good!</FormFeedback>\r\n                    </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                    <FormInput placeholder=\"Email\" required invalid/>\r\n                    <FormFeedback>The email is already in use.</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <FormSelect invalid>\r\n                        <option>Choose</option>\r\n                        <option>California</option>\r\n                        <option>Iowa</option>\r\n                        <option>Indiana</option>\r\n                    </FormSelect>\r\n                    <FormFeedback>Please select your state</FormFeedback>\r\n                </FormGroup>\r\n                <Button theme=\"primary\" className=\"mb-2 mr-1\">\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n        </CardBody>\r\n    </Card>\r\n);\r\n\r\nexport default FormValidation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormValidation from \"../components/tiles/FormValidation\";\r\nimport {Card, Col, Container, Row} from \"shards-react\";\r\n\r\nconst RegistrationScreen = ({smallStats}) => (\r\n    <Container fluid className=\"main-content-container px-4 pb-4\">\r\n        <div className=\"error\">\r\n            <div className=\"error__content\">\r\n                <Row>\r\n                    <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-5\">\r\n                        <Card>\r\n                            <FormValidation/>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    </Container>\r\n);\r\n\r\nexport default RegistrationScreen;\r\n","import React, {Component} from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\n\r\nexport default function withAuthentication(AuthComponent) {\r\n    const AuthService = new AuthenticationService();\r\n    return class AuthWrapped extends Component {\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                user: null\r\n            }\r\n        }\r\n\r\n        componentWillMount() {\r\n            if (!AuthService.loggedIn()) {\r\n                this.props.history.replace('/login')\r\n            } else {\r\n                try {\r\n                    const profile = AuthService.getProfile();\r\n                    this.setState({\r\n                        user: profile\r\n                    })\r\n                } catch (err) {\r\n                    AuthService.logout();\r\n                    this.props.history.replace('/login')\r\n                }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if (this.state.user) {\r\n                return (\r\n                    <AuthComponent history={this.props.history} user={this.state.user}/>\r\n                )\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, CardBody, CardHeader, Form, FormFeedback, FormGroup, FormInput} from \"shards-react\";\r\nimport AuthenticationService from \"../services/AuthenticationService\";\r\nimport \"../css/Login.css\"\r\n\r\nclass LoginForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {username: \"\", password: \"\", usernameFieldIsValid: null, passwordFieldIsValid: null};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.AuthService = new AuthenticationService();\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.AuthService.loggedIn()) {\r\n            this.props.history.replace('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n\r\n                <Card className=\"mb-3\">\r\n                    <CardHeader className=\"border-bottom\">\r\n                        <h3 className=\"m-0\">Investment Tracker</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Form>\r\n                            <FormGroup className=\"username\">\r\n                                <FormInput name=\"username\" size=\"lg\" placeholder=\"User Name\" required\r\n                                           invalid={this.state.usernameFieldIsValid}\r\n                                           onChange={this.handleChange}/>\r\n                                <FormFeedback>The username might be invalid</FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"password\">\r\n                                <FormInput name=\"password\" size=\"lg\" placeholder=\"Password\" required\r\n                                           invalid={this.state.passwordFieldIsValid}\r\n                                           onChange={this.handleChange}/>\r\n                                <FormFeedback>The password might be invalid</FormFeedback>\r\n                            </FormGroup>\r\n                            <Button theme=\"primary\" onClick={this.handleFormSubmit}>\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.AuthService.login(this.state.username, this.state.password)\r\n            .then(res => {\r\n                if (res.length < 50) {\r\n                    alert(res);\r\n                    this.setState({usernameFieldIsValid: true, passwordFieldIsValid: true})\r\n                } else {\r\n                    this.props.history.replace('/');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            });\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n// Layout Types\r\nimport {DefaultLayout} from \"./components/layout/default layout\";\r\n// Route Views\r\nimport DashboardOverviewScreen from \"./pages/DashboardOverviewScreen\";\r\nimport AllTransactionsScreen from \"./pages/AllTransactionsScreen\";\r\nimport StockOverviewScreen from \"./pages/StockOverviewScreen\";\r\nimport RegistrationScreen from \"./pages/RegistrationScreen\";\r\nimport withAuthentication from \"./authentication/higherOrderComponents/withAuthentication\";\r\nimport Empty from \"./components/layout/default layout/Empty\";\r\nimport LoginForm from \"./authentication/components/LoginForm\";\r\nimport LoginScreen from \"./pages/LoginScreen\";\r\n\r\nexport default [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        layout: DefaultLayout,\r\n        component: () => <Redirect to=\"/dashboard-overview\"/>\r\n    },\r\n    {\r\n        path: \"/dashboard-overview\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(DashboardOverviewScreen)\r\n    },\r\n    {\r\n        path: \"/stock-overview\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(StockOverviewScreen)\r\n    },\r\n    {\r\n        path: \"/transactions-list\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(AllTransactionsScreen)\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        layout: Empty,\r\n        component: LoginForm\r\n    },\r\n    {\r\n        path: \"/registration\",\r\n        layout: DefaultLayout,\r\n        component: RegistrationScreen\r\n    }\r\n];\r\n","import React, {Component} from \"react\";\r\nimport GoogleAnalytics from \"react-ga\";\r\n\r\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\r\n\r\nconst withTracker = (WrappedComponent, options = {}) => {\r\n    const trackPage = page => {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            return;\r\n        }\r\n\r\n        GoogleAnalytics.set({\r\n            page,\r\n            ...options\r\n        });\r\n        GoogleAnalytics.pageview(page);\r\n    };\r\n\r\n    const BASENAME = process.env.REACT_APP_BASENAME || \"\";\r\n\r\n    // eslint-disable-next-line\r\n    const HOC = class extends Component {\r\n        componentDidMount() {\r\n            // eslint-disable-next-line\r\n            const page = this.props.location.pathname + this.props.location.search;\r\n            trackPage(`${BASENAME}${page}`);\r\n        }\r\n\r\n        componentDidUpdate(prevProps) {\r\n            const currentPage =\r\n                prevProps.location.pathname + prevProps.location.search;\r\n            const nextPage =\r\n                this.props.location.pathname + this.props.location.search;\r\n\r\n            if (currentPage !== nextPage) {\r\n                trackPage(`${BASENAME}${nextPage}`);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    };\r\n\r\n    return HOC;\r\n};\r\n\r\nexport default withTracker;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport withTracker from \"./withTracker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nexport default () => (\r\n    <Router basename={process.env.PUBLIC_URL || \"\"}>\r\n        <div>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    <Route\r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={withTracker(props => {\r\n                            return (\r\n                                <route.layout {...props}>\r\n                                    <route.component {...props} />\r\n                                </route.layout>\r\n                            );\r\n                        })}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    </Router>\r\n);\r\n"],"sourceRoot":""}