{"version":3,"sources":["assets/images/avatars/0.jpg","assets/images/shards-dashboards-logo.svg","components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/Notifications.js","authentication/services/AuthenticationService.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","assets/flux/constants.js","assets/flux/dispatcher.js","assets/flux/store.js","components/layout/MainSidebar/SidebarItems.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","components/layout/default layout/Default.js","components/layout/default layout/Empty.js","components/common/PageTitle.js","components/utils/chart.js","components/common/SmallStats.js","components/common/RangeDatePicker.js","components/tiles/StockGraph.js","components/tiles/TopStocks.js","components/api/AccessApi.js","components/api/AccessApiWrapper.js","pages/DashboardOverviewScreen.js","components/tiles/AllTransactionsTable.js","components/tiles/BuySellDividendRatioGraph.js","components/common/CustomFileUpload.js","components/tiles/SubmitTransactionsFiles.js","pages/AllTransactionsScreen.js","components/tiles/SubmitNewTransaction.js","pages/StockOverviewScreen.js","components/tiles/FormValidation.js","pages/RegistrationScreen.js","authentication/higherOrderComponents/withAuthentication.js","authentication/components/LoginForm.js","pages/SignInScreen.js","components/tiles/TotalEarningsByTickerTable.js","pages/OwnedTickersScreen.js","pages/TransactionsByTicker.js","routes.js","withTracker.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","NavbarSearch","react_default","a","createElement","shards_react_es","className","seamless","type","placeholder","Notifications","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","toggleNotifications","bind","assertThisInitialized","setState","onClick","pill","theme","open","React","Component","AuthenticationService","domain","window","location","href","includes","fetch","login","getProfile","username","password","concat","method","body","JSON","stringify","then","response","setToken","Promise","resolve","token","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","Content-Type","loggedIn","objectSpread","_checkStatus","json","status","UserActions","toggleUserActions","AuthService","tag","Dropdown","caret","toggle","NavLink","src","require","alt","DropdownMenu","right","small","Link","to","divider","logout","NavbarNav","navbar","Notifications_Notifications","UserActions_UserActions","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","htmlBefore","store","Store","registerToActions","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","handleClick","dispatch","MainNavbar","layout","stickyTop","classes","classNames","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","id","maxWidth","SidebarSearch","display","minHeight","aria-label","SidebarNavItem","item","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","SidebarNavItems","getSidebarItems","onChange","addChangeListener","removeChangeListener","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","layout_MainFooter","Empty","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","SmallStats","canvasRef","createRef","chartOptions","maintainAspectRatio","responsive","legend","tooltips","enabled","custom","elements","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","apply","toConsumableArray","chartData","data","chartConfig","labels","chartLabels","datasets","current","_this$props","variation","label","value","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","height","ref","shortid","create","RangeDatePicker","startDate","undefined","endDate","handleStartDateChange","handleEndDateChange","selected","placeholderText","dropdownMode","StockGraph","position","tick","index","toFixed","hover","mode","intersect","BlogUsersOverview","buoMeta","getDatasetMeta","_model","render","common_RangeDatePicker","Array","from","_","i","fill","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","borderDash","pointBorderColor","TopStocks","padding","boxWidth","cutoutPercentage","hoverBorderColor","authenticationService","AccessApiWrapper","get","urlExtension","uid","react","AccessApi","Authorization","res","result","error","accessApiWrapper","DashboardOverviewScreen","isHighestPerformingStockLoaded","isLowestPerformingStockLoaded","isTotalEarningsLoaded","isTotalDividendEarningsLoaded","isCurrentMonthPerformanceLoaded","highestPerformingStock","lowestPerformingStock","totalEarnings","currentMonthPerformance","totalDividendEarnings","_this2","getData","smallStats","_this$state","ticker","amount","noGutters","common_PageTitle","stats","common_SmallStats","decrease","tiles_StockGraph","tiles_TopStocks","AllTransactionsTable","header","scope","transactions","formatDate","date","toUpperCase","quantity","price","total","unformattedDate","year","substring","generateHeaders","generateRows","displayChart","BuySellDividendRatioGraph","CustomFileUpload","setFile","buttonClick","progressCounter","htmlFor","hidden","SubmitTransactionsFiles","buyButtonColorIsSelected","sellButtonColorIsSelected","dividendButtonColorIsSelected","quantityField","priceField","totalField","dateField","handleChange","handleFormSubmit","event","defineProperty","target","name","console","log","files","file","fileCharacterEstimatedTimeToUpload","preventDefault","formData","FormData","append","setTimeout","postFormData","common_CustomFileUpload","AllTransactionsScreen","isLoaded","determineChartData","buyCount","sellCount","dividendCount","forEach","tiles_AllTransactionsTable","tiles_SubmitTransactionsFiles","tiles_BuySellDividendRatioGraph","SubmitNewTransaction","handleTypeButtons","parseFloat","parseInt","toLowerCase","postData","flush","StockOverviewScreen","tiles_SubmitNewTransaction","FormValidation","form","required","valid","invalid","RegistrationScreen","tiles_FormValidation","withAuthentication","AuthComponent","_Component","AuthWrapped","user","inherits","createClass","profile","history","replace","Copyright","Typography","variant","color","align","Link_Link","getFullYear","useStyles","makeStyles","paper","marginTop","spacing","flexDirection","alignItems","avatar","margin","palette","secondary","main","width","submit","LoginForm","Container","component","CssBaseline","Avatar","LockOutlined_default","TextField","isUsernameFieldValid","fullWidth","helperText","helperTextUsernameField","autoComplete","autoFocus","helperTextPasswordField","isPasswordFieldValid","FormControlLabel","control","Checkbox","Button","onSubmit","Grid","container","Box","mt","SignInScreen","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","errors","Username","Password","catch","stop","_x","arguments","_ref2","_callee2","_context2","_x2","TotalEarningsByTicker","totalProfit","OwnedTickersScreen","totalProfitPercentage","TotalEarningsByTickerTable","TransactionsByTicker","getTransactionDataForChart","transaction","transactionModels","ex","routes","path","exact","Redirect","OwnedCompaniesScreen","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","pathname","search","prevProps","currentPage","nextPage","Boolean","hostname","match","ReactDOM","BrowserRouter","basename","route","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6e8ec5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.73476783.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.161c7399.svg\";","import React from \"react\";\r\nimport {Form, FormInput, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nexport default () => (\r\n    <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\r\n        <InputGroup seamless className=\"ml-3\">\r\n            <InputGroupAddon type=\"prepend\">\r\n                <InputGroupText>\r\n                    <i className=\"material-icons\">search</i>\r\n                </InputGroupText>\r\n            </InputGroupAddon>\r\n            <FormInput\r\n                className=\"navbar-search\"\r\n                placeholder=\"Search for something...\"\r\n            />\r\n        </InputGroup>\r\n    </Form>\r\n);\r\n","import React from \"react\";\r\nimport {Badge, Collapse, DropdownItem, NavItem, NavLink} from \"shards-react\";\r\n\r\nexport default class Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.toggleNotifications = this.toggleNotifications.bind(this);\r\n    }\r\n\r\n    toggleNotifications() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavItem className=\"border-right dropdown notifications\">\r\n                <NavLink\r\n                    className=\"nav-link-icon text-center\"\r\n                    onClick={this.toggleNotifications}\r\n                >\r\n                    <div className=\"nav-link-icon__wrapper\">\r\n                        <i className=\"material-icons\">&#xE7F4;</i>\r\n                        <Badge pill theme=\"danger\">\r\n                            2\r\n                        </Badge>\r\n                    </div>\r\n                </NavLink>\r\n                <Collapse\r\n                    open={this.state.visible}\r\n                    className=\"dropdown-menu dropdown-menu-small\"\r\n                >\r\n                    <DropdownItem>\r\n                        <div className=\"notification__icon-wrapper\">\r\n                            <div className=\"notification__icon\">\r\n                                <i className=\"material-icons\">&#xE6E1;</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"notification__content\">\r\n                            <span className=\"notification__category\">Analytics</span>\r\n                            <p>\r\n                                Your website’s active users count increased by{\" \"}\r\n                                <span className=\"text-success text-semibold\">28%</span> in the\r\n                                last week. Great job!\r\n                            </p>\r\n                        </div>\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                        <div className=\"notification__icon-wrapper\">\r\n                            <div className=\"notification__icon\">\r\n                                <i className=\"material-icons\">&#xE8D1;</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"notification__content\">\r\n                            <span className=\"notification__category\">Sales</span>\r\n                            <p>\r\n                                Last week your store’s sales count decreased by{\" \"}\r\n                                <span className=\"text-danger text-semibold\">5.52%</span>. It\r\n                                could have been worse!\r\n                            </p>\r\n                        </div>\r\n                    </DropdownItem>\r\n                    <DropdownItem className=\"notification__all text-center\">\r\n                        View all Notifications\r\n                    </DropdownItem>\r\n                </Collapse>\r\n            </NavItem>\r\n        );\r\n    }\r\n}\r\n","import decode from 'jwt-decode';\r\n\r\nexport default class AuthenticationService {\r\n    constructor() {\r\n        let baseUrlTest = \"https://sartain-studios-api.com:2083\"; //https://localhost:44344\";\r\n        let baseUrlProd = \"https://sartain-studios-api.com:2053\";\r\n\r\n        this.domain = window.location.href.includes(\"localhost\") ?\r\n            baseUrlTest :\r\n            baseUrlProd;\r\n\r\n        this.fetch = this.fetch.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.fetch(`${this.domain}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        }).then(response => {\r\n            this.setToken(response);\r\n            return Promise.resolve(response);\r\n        })\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            return decoded.exp < Date.now() / 1000;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setToken(idToken) {\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n    }\r\n\r\n    getProfile() {\r\n        // Using jwt-decode npm package to decode the token\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    fetch(url, options) {\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            return response;\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Collapse, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, NavItem, NavLink} from \"shards-react\";\r\nimport AuthenticationService from \"../../../../authentication/services/AuthenticationService\";\r\n\r\nexport default class UserActions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.toggleUserActions = this.toggleUserActions.bind(this);\r\n    }\r\n\r\n    toggleUserActions() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const AuthService = new AuthenticationService();\r\n\r\n        return (\r\n            <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n                <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n                    <img\r\n                        className=\"user-avatar rounded-circle mr-2\"\r\n                        src={require(\"../../../../assets/images/avatars/0.jpg\")}\r\n                        alt=\"User Avatar\"\r\n                    />{\" \"}\r\n                    <span className=\"d-none d-md-inline-block\">Sierra Brooks</span>\r\n                </DropdownToggle>\r\n                <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n                    <DropdownItem tag={Link} to=\"user-profile\">\r\n                        <i className=\"material-icons\">&#xE7FD;</i> Account\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"edit-user-profile\">\r\n                        <i className=\"material-icons\">&#xE8B8;</i> Settings\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"file-manager-list\">\r\n                        <i className=\"material-icons\">&#xE2C7;</i> Files\r\n                    </DropdownItem>\r\n                    <DropdownItem tag={Link} to=\"transaction-history\">\r\n                        <i className=\"material-icons\">&#xE896;</i> Transactions\r\n                    </DropdownItem>\r\n                    <DropdownItem divider/>\r\n                    <DropdownItem tag={Link} to=\"/\" className=\"text-danger\" onClick={AuthService.logout}>\r\n                        <i className=\"material-icons text-danger\">&#xE879;</i> Logout\r\n                    </DropdownItem>\r\n                </Collapse>\r\n            </NavItem>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Nav} from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n    <Nav navbar className=\"border-left flex-row\">\r\n        <Notifications/>\r\n        <UserActions/>\r\n    </Nav>\r\n);\r\n","export default {\r\n    CHANGE: \"CHANGE\",\r\n    TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\r\n};\r\n","import {Dispatcher} from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","import {EventEmitter} from \"events\";\r\n\r\nimport Dispatcher from \"./dispatcher\";\r\nimport Constants from \"./constants\";\r\nimport getSidebarNavItems from \"../../components/layout/MainSidebar/SidebarItems\";\r\n\r\nlet _store = {\r\n    menuVisible: false,\r\n    navItems: getSidebarNavItems()\r\n};\r\n\r\nclass Store extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.registerToActions = this.registerToActions.bind(this);\r\n        this.toggleSidebar = this.toggleSidebar.bind(this);\r\n\r\n        Dispatcher.register(this.registerToActions.bind(this));\r\n    }\r\n\r\n    registerToActions({actionType, payload}) {\r\n        switch (actionType) {\r\n            case Constants.TOGGLE_SIDEBAR:\r\n                this.toggleSidebar();\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    toggleSidebar() {\r\n        _store.menuVisible = !_store.menuVisible;\r\n        this.emit(Constants.CHANGE);\r\n    }\r\n\r\n    getMenuState() {\r\n        return _store.menuVisible;\r\n    }\r\n\r\n    getSidebarItems() {\r\n        return _store.navItems;\r\n    }\r\n\r\n    addChangeListener(callback) {\r\n        this.on(Constants.CHANGE, callback);\r\n    }\r\n\r\n    removeChangeListener(callback) {\r\n        this.removeListener(Constants.CHANGE, callback);\r\n    }\r\n}\r\n\r\nexport default new Store();\r\n","export default function () {\r\n    return [\r\n        {\r\n            title: \"Dashboard\",\r\n            to: \"/dashboard-overview\",\r\n            htmlBefore: '<i class=\"material-icons\">table_chart</i>'\r\n        },\r\n        {\r\n            title: \"Stock Overview\",\r\n            to: \"/stock-overview\",\r\n            htmlBefore: '<i class=\"material-icons\">vertical_split</i>'\r\n        },\r\n        {\r\n            title: \"Transactions\",\r\n            to: \"/transactions-list\",\r\n            htmlBefore: '<i class=\"material-icons\">view_module</i>'\r\n        },\r\n        {\r\n            title: \"Transactions by Ticker\",\r\n            to: \"/transactions-by-ticker\",\r\n            htmlBefore: '<i class=\"material-icons\">vertical_split</i>'\r\n        },\r\n        {\r\n            title: \"Owned Tickers\",\r\n            to: \"/owned-tickers\",\r\n            htmlBefore: '<i class=\"material-icons\">vertical_split</i>'\r\n        }\r\n    ];\r\n}\r\n","import React from \"react\";\r\n\r\nimport {Constants, Dispatcher} from \"../../../assets/flux\";\r\n\r\nclass NavbarToggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        Dispatcher.dispatch({\r\n            actionType: Constants.TOGGLE_SIDEBAR\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"nav\">\r\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                <a href=\"#\" onClick={this.handleClick}\r\n                   className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\r\n                    <i className=\"material-icons\">&#xE5D2;</i>\r\n                </a>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {Container, Navbar} from \"shards-react\";\r\n\r\nimport NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({layout, stickyTop}) => {\r\n    const classes = classNames(\r\n        \"main-navbar\",\r\n        \"bg-white\",\r\n        stickyTop && \"sticky-top\"\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <Container className=\"p-0\">\r\n                <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n                    <NavbarSearch/>\r\n                    <NavbarNav/>\r\n                    <NavbarToggle/>\r\n                </Navbar>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n    /**\r\n     * The layout type where the MainNavbar is used.\r\n     */\r\n    layout: PropTypes.string,\r\n    /**\r\n     * Whether the main Navbar is sticky to the top, or not.\r\n     */\r\n    stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n    stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Navbar, NavbarBrand} from \"shards-react\";\r\n\r\nimport {Constants, Dispatcher} from \"../../../assets/flux\";\r\n\r\nclass SidebarMainNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\r\n    }\r\n\r\n    handleToggleSidebar() {\r\n        Dispatcher.dispatch({\r\n            actionType: Constants.TOGGLE_SIDEBAR\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {hideLogoText} = this.props;\r\n        return (\r\n            <div className=\"main-navbar\">\r\n                <Navbar\r\n                    className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\r\n                    type=\"light\"\r\n                >\r\n                    <NavbarBrand\r\n                        className=\"w-100 mr-0\"\r\n                        href=\"#\"\r\n                        style={{lineHeight: \"25px\"}}\r\n                    >\r\n                        <div className=\"d-table m-auto\">\r\n                            <img\r\n                                id=\"main-logo\"\r\n                                className=\"d-inline-block align-top mr-1\"\r\n                                style={{maxWidth: \"25px\"}}\r\n                                src={require(\"../../../assets/images/shards-dashboards-logo.svg\")}\r\n                                alt=\"Investment Tracker Dashboard\"\r\n                            />\r\n                            {!hideLogoText && (<span className=\"d-none d-md-inline ml-1\">Investment Tracker</span>\r\n                            )}\r\n                        </div>\r\n                    </NavbarBrand>\r\n                    {/* eslint-disable-next-line */}\r\n                    <a\r\n                        className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\r\n                        onClick={this.handleToggleSidebar}\r\n                    >\r\n                        <i className=\"material-icons\">&#xE5C4;</i>\r\n                    </a>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarMainNavbar.propTypes = {\r\n    /**\r\n     * Whether to hide the logo text, or not.\r\n     */\r\n    hideLogoText: PropTypes.bool\r\n};\r\n\r\nSidebarMainNavbar.defaultProps = {\r\n    hideLogoText: false\r\n};\r\n\r\nexport default SidebarMainNavbar;\r\n","import React from \"react\";\r\nimport {Form, FormInput, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nexport default () => (\r\n    <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\"\r\n          style={{display: \"flex\", minHeight: \"45px\"}}>\r\n        <InputGroup seamless className=\"ml-3\">\r\n            <InputGroupAddon type=\"prepend\">\r\n                <InputGroupText>\r\n                    <i className=\"material-icons\">search</i>\r\n                </InputGroupText>\r\n                <FormInput\r\n                    className=\"navbar-search\"\r\n                    placeholder=\"Search for something...\"\r\n                    aria-label=\"Search\"\r\n                />\r\n            </InputGroupAddon>\r\n        </InputGroup>\r\n    </Form>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {NavLink as RouteNavLink} from \"react-router-dom\";\r\nimport {NavItem, NavLink} from \"shards-react\";\r\n\r\nconst SidebarNavItem = ({item}) => (\r\n    <NavItem>\r\n        <NavLink tag={RouteNavLink} to={item.to}>\r\n            {item.htmlBefore && (\r\n                <div\r\n                    className=\"d-inline-block item-icon-wrapper\"\r\n                    dangerouslySetInnerHTML={{__html: item.htmlBefore}}\r\n                />\r\n            )}\r\n            {item.title && <span>{item.title}</span>}\r\n            {item.htmlAfter && (\r\n                <div\r\n                    className=\"d-inline-block item-icon-wrapper\"\r\n                    dangerouslySetInnerHTML={{__html: item.htmlAfter}}\r\n                />\r\n            )}\r\n        </NavLink>\r\n    </NavItem>\r\n);\r\n\r\nSidebarNavItem.propTypes = {\r\n    /**\r\n     * The item object.\r\n     */\r\n    item: PropTypes.object\r\n};\r\n\r\nexport default SidebarNavItem;\r\n","import React from \"react\";\r\nimport {Nav} from \"shards-react\";\r\n\r\nimport SidebarNavItem from \"./SidebarNavItem\";\r\nimport {Store} from \"../../../assets/flux\";\r\n\r\nclass SidebarNavItems extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            navItems: Store.getSidebarItems()\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        Store.addChangeListener(this.onChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Store.removeChangeListener(this.onChange);\r\n    }\r\n\r\n    onChange() {\r\n        this.setState({\r\n            ...this.state,\r\n            navItems: Store.getSidebarItems()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {navItems: items} = this.state;\r\n        return (\r\n            <div className=\"nav-wrapper\">\r\n                <Nav className=\"nav--no-borders flex-column\">\r\n                    {items.map((item, idx) => (\r\n                        <SidebarNavItem key={idx} item={item}/>\r\n                    ))}\r\n                </Nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarNavItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {Col} from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\nimport SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport {Store} from \"../../../assets/flux\";\r\n\r\nclass MainSidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menuVisible: false,\r\n            sidebarNavItems: Store.getSidebarItems()\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        Store.addChangeListener(this.onChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Store.removeChangeListener(this.onChange);\r\n    }\r\n\r\n    onChange() {\r\n        this.setState({\r\n            ...this.state,\r\n            menuVisible: Store.getMenuState(),\r\n            sidebarNavItems: Store.getSidebarItems()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classes = classNames(\r\n            \"main-sidebar\",\r\n            \"px-0\",\r\n            \"col-12\",\r\n            this.state.menuVisible && \"open\"\r\n        );\r\n\r\n        return (\r\n            <Col\r\n                tag=\"aside\"\r\n                className={classes}\r\n                lg={{size: 2}}\r\n                md={{size: 3}}\r\n            >\r\n                <SidebarMainNavbar hideLogoText={this.props.hideLogoText}/>\r\n                <SidebarSearch/>\r\n                <SidebarNavItems/>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n    /**\r\n     * Whether to hide the logo text, or not.\r\n     */\r\n    hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n    hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Container, Nav, NavItem, NavLink, Row} from \"shards-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MainFooter = ({contained, menuItems, copyright}) => (\r\n    <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\r\n        <Container fluid={contained}>\r\n            <Row>\r\n                <Nav>\r\n                    {menuItems.map((item, idx) => (\r\n                        <NavItem key={idx}>\r\n                            <NavLink tag={Link} to={item.to}>\r\n                                {item.title}\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    ))}\r\n                </Nav>\r\n                <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n);\r\n\r\nMainFooter.propTypes = {\r\n    /**\r\n     * Whether the content is contained, or not.\r\n     */\r\n    contained: PropTypes.bool,\r\n    /**\r\n     * The menu items array.\r\n     */\r\n    menuItems: PropTypes.array,\r\n    /**\r\n     * The copyright info.\r\n     */\r\n    copyright: PropTypes.string\r\n};\r\n\r\nMainFooter.defaultProps = {\r\n    contained: false,\r\n    copyright: \"Sartain Studios\",\r\n    menuItems: [\r\n        {\r\n            title: \"Home\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"Services\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"About\",\r\n            to: \"#\"\r\n        },\r\n        {\r\n            title: \"Products\",\r\n            to: \"#\"\r\n        }\r\n    ]\r\n};\r\n\r\nexport default MainFooter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport MainNavbar from \"../MainNavbar/MainNavbar\";\r\nimport MainSidebar from \"../MainSidebar/MainSidebar\";\r\nimport MainFooter from \"../MainFooter\";\r\n\r\nconst DefaultLayout = ({children, noNavbar, noFooter}) => (\r\n    <Container fluid>\r\n        <Row>\r\n            <MainSidebar/>\r\n            <Col\r\n                className=\"main-content p-0\"\r\n                lg={{size: 10, offset: 2}}\r\n                md={{size: 9, offset: 3}}\r\n                sm=\"12\"\r\n                tag=\"main\"\r\n            >\r\n                {!noNavbar && <MainNavbar/>}\r\n                {children}\r\n                {!noFooter && <MainFooter/>}\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nDefaultLayout.propTypes = {\r\n    /**\r\n     * Whether to display the Navbar, or not.\r\n     */\r\n    noNavbar: PropTypes.bool,\r\n    /**\r\n     * Whether to display the footer, or not.\r\n     */\r\n    noFooter: PropTypes.bool\r\n};\r\n\r\nDefaultLayout.defaultProps = {\r\n    noNavbar: false,\r\n    noFooter: false\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Empty = ({children, noNavbar, noFooter}) => (\r\n    <div>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nEmpty.propTypes = {\r\n    /**\r\n     * Whether to display the Navbar, or not.\r\n     */\r\n    noNavbar: PropTypes.bool,\r\n    /**\r\n     * Whether to display the footer, or not.\r\n     */\r\n    noFooter: PropTypes.bool\r\n};\r\n\r\nEmpty.defaultProps = {\r\n    noNavbar: false,\r\n    noFooter: false\r\n};\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col} from \"shards-react\";\r\n\r\nconst PageTitle = ({title, subtitle, className, ...attrs}) => {\r\n    const classes = classNames(\r\n        className,\r\n        \"text-center\",\r\n        \"text-md-left\",\r\n        \"mb-sm-0\"\r\n    );\r\n\r\n    return (\r\n        <Col xs=\"12\" sm=\"4\" className={classes} {...attrs}>\r\n            <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\r\n            <h3 className=\"page-title\">{title}</h3>\r\n        </Col>\r\n    )\r\n};\r\n\r\nPageTitle.propTypes = {\r\n    /**\r\n     * The page title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The page subtitle.\r\n     */\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","import Chart from 'chart.js';\r\n\r\nChart.defaults.LineWithLine = Chart.defaults.line;\r\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\r\n    draw(ease) {\r\n        Chart.controllers.line.prototype.draw.call(this, ease);\r\n\r\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n            const activePoint = this.chart.tooltip._active[0];\r\n            const {ctx} = this.chart;\r\n            const {x} = activePoint.tooltipPosition();\r\n            const topY = this.chart.scales['y-axis-0'].top;\r\n            const bottomY = this.chart.scales['y-axis-0'].bottom;\r\n\r\n            // Draw the line\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, topY);\r\n            ctx.lineTo(x, bottomY);\r\n            ctx.lineWidth = 0.5;\r\n            ctx.strokeStyle = '#ddd';\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        }\r\n    },\r\n});\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport shortid from \"shortid\";\r\nimport {Card, CardBody} from \"shards-react\";\r\n\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass SmallStats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartOptions = {\r\n            ...{\r\n                maintainAspectRatio: true,\r\n                responsive: true,\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    enabled: false,\r\n                    custom: false\r\n                },\r\n                elements: {\r\n                    point: {\r\n                        radius: 0\r\n                    },\r\n                    line: {\r\n                        tension: 0.33\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            ticks: {\r\n                                display: false\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            scaleLabel: false,\r\n                            ticks: {\r\n                                display: false,\r\n                                isplay: false,\r\n                                // Avoid getting the graph line cut of at the top of the canvas.\r\n                                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\r\n                                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            ...this.props.chartOptions\r\n        };\r\n\r\n        const chartConfig = {\r\n            ...{\r\n                type: \"line\",\r\n                data: {\r\n                    ...{\r\n                        labels: this.props.chartLabels\r\n                    },\r\n                    ...{\r\n                        datasets: this.props.chartData\r\n                    }\r\n                },\r\n                options: chartOptions\r\n            },\r\n            ...this.props.chartConfig\r\n        };\r\n\r\n        new Chart(this.canvasRef.current, chartConfig);\r\n    }\r\n\r\n    render() {\r\n        const {variation, label, value, percentage, increase} = this.props;\r\n\r\n        const cardClasses = classNames(\r\n            \"stats-small\",\r\n            variation && `stats-small--${variation}`\r\n        );\r\n\r\n        const cardBodyClasses = classNames(\r\n            variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\r\n        );\r\n\r\n        const innerWrapperClasses = classNames(\r\n            \"d-flex\",\r\n            variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\r\n        );\r\n\r\n        const dataFieldClasses = classNames(\r\n            \"stats-small__data\",\r\n            variation === \"1\" && \"text-center\"\r\n        );\r\n\r\n        const labelClasses = classNames(\r\n            \"stats-small__label\",\r\n            \"text-uppercase\",\r\n            variation !== \"1\" && \"mb-1\"\r\n        );\r\n\r\n        const valueClasses = classNames(\r\n            \"stats-small__value\",\r\n            \"count\",\r\n            variation === \"1\" ? \"my-3\" : \"m-0\"\r\n        );\r\n\r\n        const innerDataFieldClasses = classNames(\r\n            \"stats-small__data\",\r\n            variation !== \"1\" && \"text-right align-items-center\"\r\n        );\r\n\r\n        const percentageClasses = classNames(\r\n            \"stats-small__percentage\",\r\n            `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\r\n        );\r\n\r\n        const canvasHeight = variation === \"1\" ? 120 : 60;\r\n\r\n        return (\r\n            <Card small className={cardClasses}>\r\n                <CardBody className={cardBodyClasses}>\r\n                    <div className={innerWrapperClasses}>\r\n                        <div className={dataFieldClasses}>\r\n                            <span className={labelClasses}>{label}</span>\r\n                            <h6 className={valueClasses}>{value}</h6>\r\n                        </div>\r\n                        <div className={innerDataFieldClasses}>\r\n                            <span className={percentageClasses}>{percentage}</span>\r\n                        </div>\r\n                    </div>\r\n                    <canvas\r\n                        height={canvasHeight}\r\n                        ref={this.canvasRef}\r\n                        className={`stats-small-${shortid()}`}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nSmallStats.propTypes = {\r\n    /**\r\n     * The Small Stats variation.\r\n     */\r\n    variation: PropTypes.string,\r\n    /**\r\n     * The label.\r\n     */\r\n    label: PropTypes.string,\r\n    /**\r\n     * The value.\r\n     */\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    /**\r\n     * The percentage number or string.\r\n     */\r\n    percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    /**\r\n     * Whether is a value increase, or not.\r\n     */\r\n    increase: PropTypes.bool,\r\n    /**\r\n     * The Chart.js configuration object.\r\n     */\r\n    chartConfig: PropTypes.object,\r\n    /**\r\n     * The Chart.js options object.\r\n     */\r\n    chartOptions: PropTypes.object,\r\n    /**\r\n     * The chart data.\r\n     */\r\n    chartData: PropTypes.array.isRequired,\r\n    /**\r\n     * The chart labels.\r\n     */\r\n    chartLabels: PropTypes.array\r\n};\r\n\r\nSmallStats.defaultProps = {\r\n    increase: true,\r\n    percentage: 0,\r\n    value: 0,\r\n    label: \"Label\",\r\n    chartOptions: Object.create(null),\r\n    chartConfig: Object.create(null),\r\n    chartData: [],\r\n    chartLabels: []\r\n};\r\n\r\nexport default SmallStats;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {DatePicker, InputGroup, InputGroupAddon, InputGroupText} from \"shards-react\";\r\n\r\nimport \"../../assets/css/range-date-picker.css\";\r\n\r\nclass RangeDatePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            startDate: undefined,\r\n            endDate: undefined\r\n        };\r\n\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n    }\r\n\r\n    handleStartDateChange(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            ...{startDate: new Date(value)}\r\n        });\r\n    }\r\n\r\n    handleEndDateChange(value) {\r\n        this.setState({\r\n            ...this.state,\r\n            ...{endDate: new Date(value)}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {className} = this.props;\r\n        const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\r\n\r\n        return (\r\n            <InputGroup className={classes}>\r\n                <DatePicker\r\n                    size=\"sm\"\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleStartDateChange}\r\n                    placeholderText=\"Start Date\"\r\n                    dropdownMode=\"select\"\r\n                    className=\"text-center\"\r\n                />\r\n                <DatePicker\r\n                    size=\"sm\"\r\n                    selected={this.state.endDate}\r\n                    onChange={this.handleEndDateChange}\r\n                    placeholderText=\"End Date\"\r\n                    dropdownMode=\"select\"\r\n                    className=\"text-center\"\r\n                />\r\n                <InputGroupAddon type=\"append\">\r\n                    <InputGroupText>\r\n                        <i className=\"material-icons\">&#xE916;</i>\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeDatePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Button, Card, CardBody, CardHeader, Col, Row} from \"shards-react\";\r\n\r\nimport RangeDatePicker from \"../common/RangeDatePicker\";\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass StockGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartOptions = {\r\n            ...{\r\n                responsive: true,\r\n                legend: {\r\n                    position: \"top\"\r\n                },\r\n                elements: {\r\n                    line: {\r\n                        // A higher value makes the line look skewed at this ratio.\r\n                        tension: 0.3\r\n                    },\r\n                    point: {\r\n                        radius: 0\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            gridLines: false,\r\n                            ticks: {\r\n                                callback(tick, index) {\r\n                                    // Jump every 7 values on the X axis labels to avoid clutter.\r\n                                    return index % 7 !== 0 ? \"\" : tick;\r\n                                }\r\n                            }\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            ticks: {\r\n                                suggestedMax: 45,\r\n                                callback(tick) {\r\n                                    if (tick === 0) {\r\n                                        return tick;\r\n                                    }\r\n                                    // Format the amounts using Ks for thousands.\r\n                                    return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                hover: {\r\n                    mode: \"nearest\",\r\n                    intersect: false\r\n                },\r\n                tooltips: {\r\n                    custom: false,\r\n                    mode: \"nearest\",\r\n                    intersect: false\r\n                }\r\n            },\r\n            ...this.props.chartOptions\r\n        };\r\n\r\n        const BlogUsersOverview = new Chart(this.canvasRef.current, {\r\n            type: \"LineWithLine\",\r\n            data: this.props.chartData,\r\n            options: chartOptions\r\n        });\r\n\r\n        // They can still be triggered on hover.\r\n        const buoMeta = BlogUsersOverview.getDatasetMeta(0);\r\n        buoMeta.data[0]._model.radius = 0;\r\n        buoMeta.data[\r\n        this.props.chartData.datasets[0].data.length - 1\r\n            ]._model.radius = 0;\r\n\r\n        // Render the chart.\r\n        BlogUsersOverview.render();\r\n    }\r\n\r\n    render() {\r\n        const {title} = this.props;\r\n        return (\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0\">\r\n                    <Row className=\"border-bottom py-2 bg-light\">\r\n                        <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\r\n                            <RangeDatePicker/>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                size=\"sm\"\r\n                                className=\"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\r\n                            >\r\n                                View Full Screen &rarr;\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <canvas\r\n                        height=\"120\"\r\n                        ref={this.canvasRef}\r\n                        style={{maxWidth: \"100% !important\"}}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nStockGraph.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart dataset.\r\n     */\r\n    chartData: PropTypes.object,\r\n    /**\r\n     * The Chart.js options.\r\n     */\r\n    chartOptions: PropTypes.object\r\n};\r\n\r\nStockGraph.defaultProps = {\r\n    title: \"Overview\",\r\n    chartData: {\r\n        labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\r\n        datasets: [\r\n            {\r\n                label: \"Current Month\",\r\n                fill: \"start\",\r\n                data: [\r\n                    500,\r\n                    800,\r\n                    320,\r\n                    180,\r\n                    240,\r\n                    320,\r\n                    230,\r\n                    650,\r\n                    590,\r\n                    1200,\r\n                    750,\r\n                    940,\r\n                    1420,\r\n                    1200,\r\n                    960,\r\n                    1450,\r\n                    1820,\r\n                    2800,\r\n                    2102,\r\n                    1920,\r\n                    3920,\r\n                    3202,\r\n                    3140,\r\n                    2800,\r\n                    3200,\r\n                    3200,\r\n                    3400,\r\n                    2910,\r\n                    3100,\r\n                    4250\r\n                ],\r\n                backgroundColor: \"rgba(0,123,255,0.1)\",\r\n                borderColor: \"rgba(0,123,255,1)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointHoverBackgroundColor: \"rgb(0,123,255)\",\r\n                borderWidth: 1.5,\r\n                pointRadius: 0,\r\n                pointHoverRadius: 3\r\n            },\r\n            {\r\n                label: \"Past Month\",\r\n                fill: \"start\",\r\n                data: [\r\n                    380,\r\n                    430,\r\n                    120,\r\n                    230,\r\n                    410,\r\n                    740,\r\n                    472,\r\n                    219,\r\n                    391,\r\n                    229,\r\n                    400,\r\n                    203,\r\n                    301,\r\n                    380,\r\n                    291,\r\n                    620,\r\n                    700,\r\n                    300,\r\n                    630,\r\n                    402,\r\n                    320,\r\n                    380,\r\n                    289,\r\n                    410,\r\n                    300,\r\n                    530,\r\n                    630,\r\n                    720,\r\n                    780,\r\n                    1200\r\n                ],\r\n                backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                borderColor: \"rgba(255,65,105,1)\",\r\n                pointBackgroundColor: \"#ffffff\",\r\n                pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\r\n                borderDash: [3, 3],\r\n                borderWidth: 1,\r\n                pointRadius: 0,\r\n                pointHoverRadius: 2,\r\n                pointBorderColor: \"rgba(255,65,105,1)\"\r\n            }\r\n        ]\r\n    }\r\n};\r\n\r\nexport default StockGraph;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Card, CardBody, CardFooter, CardHeader, Col, FormSelect, Row} from \"shards-react\";\r\n\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass TopStocks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartConfig = {\r\n            type: \"pie\",\r\n            data: this.props.chartData,\r\n            options: {\r\n                ...{\r\n                    legend: {\r\n                        position: \"bottom\",\r\n                        labels: {\r\n                            padding: 25,\r\n                            boxWidth: 20\r\n                        }\r\n                    },\r\n                    cutoutPercentage: 0,\r\n                    tooltips: {\r\n                        custom: false,\r\n                        mode: \"index\",\r\n                        position: \"nearest\"\r\n                    }\r\n                },\r\n                ...this.props.chartOptions\r\n            }\r\n        };\r\n\r\n        new Chart(this.canvasRef.current, chartConfig);\r\n    }\r\n\r\n    render() {\r\n        const {title} = this.props;\r\n        return (\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"d-flex py-0\">\r\n                    <canvas\r\n                        height=\"220\"\r\n                        ref={this.canvasRef}\r\n                        className=\"blog-users-by-device m-auto\"\r\n                    />\r\n                </CardBody>\r\n                <CardFooter className=\"border-top\">\r\n                    <Row>\r\n                        <Col>\r\n                            <FormSelect\r\n                                size=\"sm\"\r\n                                value=\"last-week\"\r\n                                style={{maxWidth: \"130px\"}}\r\n                                onChange={() => {\r\n                                }}\r\n                            >\r\n                                <option value=\"last-week\">Last Week</option>\r\n                                <option value=\"today\">Today</option>\r\n                                <option value=\"last-month\">Last Month</option>\r\n                                <option value=\"last-year\">Last Year</option>\r\n                            </FormSelect>\r\n                        </Col>\r\n                        <Col className=\"text-right view-report\">\r\n                            {/* eslint-disable-next-line */}\r\n                            <a href=\"#\">View full report &rarr;</a>\r\n                        </Col>\r\n                    </Row>\r\n                </CardFooter>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nTopStocks.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart config object.\r\n     */\r\n    chartConfig: PropTypes.object,\r\n    /**\r\n     * The Chart.js options.\r\n     */\r\n    chartOptions: PropTypes.object,\r\n    /**\r\n     * The chart data.\r\n     */\r\n    chartData: PropTypes.object\r\n};\r\n\r\nTopStocks.defaultProps = {\r\n    title: \"Top Stocks\",\r\n    chartData: {\r\n        datasets: [\r\n            {\r\n                hoverBorderColor: \"#ffffff\",\r\n                data: [23.3, 53.3, 13.3],\r\n                backgroundColor: [\r\n                    \"rgba(0,123,255,0.6)\",\r\n                    \"rgba(0,123,255,0.9)\",\r\n                    \"rgba(0,123,255,0.2)\"\r\n                ]\r\n            }\r\n        ],\r\n        labels: [\"Apple\", \"Amazon\", \"Waste Management\"]\r\n    }\r\n};\r\n\r\nexport default TopStocks;\r\n","import * as React from \"react\";\r\nimport AuthenticationService from \"../../authentication/services/AuthenticationService\";\r\n\r\nvar authenticationService = new AuthenticationService();\r\n\r\nclass AccessApi extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let baseUrlTest = \"https://sartain-studios-api.com:2083\"; //\"https://localhost:44344\";\r\n        let baseUrlProd = \"https://sartain-studios-api.com:2053\";\r\n\r\n        this.state = {\r\n            url: window.location.href.includes(\"localhost\") ?\r\n                baseUrlTest :\r\n                baseUrlProd\r\n        };\r\n    }\r\n\r\n    getData(urlExtension) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        const headers = {'Authorization': 'Bearer ' + authenticationService.getToken()};\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url, {headers})\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(result)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    postData(urlExtension, data) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + authenticationService.getToken(),\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(result)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    postFormData(urlExtension, data) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + authenticationService.getToken(),\r\n                    },\r\n                    body: data\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(result)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteData(urlExtension, uid) {\r\n        const url = this.state.url + urlExtension;\r\n\r\n        return new Promise(function (resolve) {\r\n                fetch(url + uid, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            return resolve(\"Deleted: \" + uid)\r\n                        },\r\n                        (error) => {\r\n                            return resolve(\"Failed to delete: \" + uid + \" error: \" + error)\r\n                        });\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>AccessFirebase</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessApi;\r\n","import * as React from \"react\";\r\nimport AccessAPI from \"./AccessApi\";\r\n\r\nclass AccessApiWrapper extends AccessAPI {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getData(item) {\r\n        return super.getData(item);\r\n    }\r\n\r\n    postData(urlExtension, data) {\r\n        return super.postData(urlExtension, data);\r\n    }\r\n\r\n    postFormData(urlExtension, data) {\r\n        return super.postFormData(urlExtension, data);\r\n    }\r\n\r\n    deleteData(urlExtension, uid) {\r\n        return super.deleteData(urlExtension, uid);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>AccessAPIWrapper</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessApiWrapper;\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Card, CardHeader, Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\nimport SmallStats from \"./../components/common/SmallStats\";\r\nimport StockGraph from \"../components/tiles/StockGraph\";\r\nimport TopStocks from \"../components/tiles/TopStocks\";\r\nimport AccessApiWrapper from \"../components/api/AccessApiWrapper\";\r\n\r\nconst accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass DashboardOverviewScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isHighestPerformingStockLoaded: false,\r\n            isLowestPerformingStockLoaded: false,\r\n            isTotalEarningsLoaded: false,\r\n            isTotalDividendEarningsLoaded: false,\r\n            isCurrentMonthPerformanceLoaded: false,\r\n            highestPerformingStock: {},\r\n            lowestPerformingStock: {},\r\n            totalEarnings: {},\r\n            currentMonthPerformance: {},\r\n            totalDividendEarnings: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        accessApiWrapper.getData(\"/HighestPerformingStock\").then((result) => {\r\n            this.setState({\r\n                    isHighestPerformingStockLoaded: true,\r\n                    highestPerformingStock: result\r\n                }\r\n            );\r\n        });\r\n\r\n        accessApiWrapper.getData(\"/LowestPerformingStock\").then((result) => {\r\n            this.setState({\r\n                    isLowestPerformingStockLoaded: true,\r\n                    lowestPerformingStock: result\r\n                }\r\n            );\r\n        });\r\n\r\n        accessApiWrapper.getData(\"/TotalEarnings\").then((result) => {\r\n            this.setState({\r\n                    isTotalEarningsLoaded: true,\r\n                    totalEarnings: result\r\n                }\r\n            );\r\n        });\r\n\r\n        accessApiWrapper.getData(\"/TotalDividendEarnings\").then((result) => {\r\n            this.setState({\r\n                    isTotalDividendEarningsLoaded: true,\r\n                    totalDividendEarnings: result\r\n                }\r\n            );\r\n        });\r\n\r\n        accessApiWrapper.getData(\"/CurrentMonthPerformance\").then((result) => {\r\n            this.setState({\r\n                    isCurrentMonthPerformanceLoaded: true,\r\n                    currentMonthPerformance: result\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {smallStats} = this.props;\r\n        let {\r\n            highestPerformingStock, lowestPerformingStock, totalEarnings, totalDividendEarnings, currentMonthPerformance,\r\n            isHighestPerformingStockLoaded, isLowestPerformingStockLoaded, isTotalEarningsLoaded, isTotalDividendEarningsLoaded,\r\n            isCurrentMonthPerformanceLoaded\r\n        } = this.state;\r\n\r\n        if (isHighestPerformingStockLoaded === true && isLowestPerformingStockLoaded === true && isTotalEarningsLoaded\r\n            && isTotalDividendEarningsLoaded === true && isCurrentMonthPerformanceLoaded === true) {\r\n            smallStats[0].label = \"Highest Performer: \" + highestPerformingStock.ticker;\r\n            smallStats[0].value = \"$\" + highestPerformingStock.amount.toFixed(2);\r\n\r\n            smallStats[1].label = \"Total Earnings\";\r\n            smallStats[1].value = \"$\" + totalEarnings.amount.toFixed(2);\r\n\r\n            smallStats[2].label = \"Total Dividend Earnings\";\r\n            smallStats[2].value = \"$\" + totalDividendEarnings.amount.toFixed(2);\r\n\r\n            smallStats[3].label = \"Current Month Performance\";\r\n            smallStats[3].value = \"$\" + currentMonthPerformance.amount.toFixed(2);\r\n\r\n            smallStats[4].label = \"Lowest Performer: \" + lowestPerformingStock.ticker;\r\n            smallStats[4].value = \"$\" + lowestPerformingStock.amount.toFixed(2);\r\n\r\n            return (\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle title=\"Overview\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\"/>\r\n                    </Row>\r\n\r\n                    {/* Small Stats Blocks */}\r\n                    <Row>\r\n                        {smallStats.map((stats, idx) => (\r\n                            <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\r\n                                <SmallStats\r\n                                    id={`small-stats-${idx}`}\r\n                                    variation=\"1\"\r\n                                    chartData={stats.datasets}\r\n                                    chartLabels={stats.chartLabels}\r\n                                    label={stats.label}\r\n                                    value={stats.value}\r\n                                    percentage={stats.percentage}\r\n                                    increase={stats.increase}\r\n                                    decrease={stats.decrease}\r\n                                />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        {/* Editor */}\r\n                        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                            <StockGraph/>\r\n                        </Col>\r\n                        {/* Users by Device */}\r\n                        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\r\n                            <TopStocks/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        } else {\r\n            return (\r\n                <Card small className=\"mb-4\">\r\n                    <CardHeader>\r\n                        <h1 className=\"m-0\">Loading</h1>\r\n                    </CardHeader>\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nDashboardOverviewScreen.propTypes = {\r\n    /**\r\n     * The small stats dataset.\r\n     */\r\n    smallStats: PropTypes.array\r\n};\r\n\r\nDashboardOverviewScreen.defaultProps = {\r\n    smallStats: [\r\n        {\r\n            label: \"Top Performer\",\r\n            value: \"$210\",\r\n            percentage: \"4.7%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n                    borderColor: \"rgb(0, 184, 216)\",\r\n                    data: [1, 2, 1, 3, 5, 4, 7]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Favorite Stock\",\r\n            value: \"$198\",\r\n            percentage: \"12.4\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(23,198,113,0.1)\",\r\n                    borderColor: \"rgb(23,198,113)\",\r\n                    data: [1, 2, 3, 3, 3, 4, 4]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Purchases This Month\",\r\n            value: \"33\",\r\n            percentage: \"3.8%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,180,0,0.1)\",\r\n                    borderColor: \"rgb(255,180,0)\",\r\n                    data: [2, 3, 3, 3, 4, 3, 3]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Sells This Month\",\r\n            value: \"29\",\r\n            percentage: \".05%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                    borderColor: \"rgb(255,65,105)\",\r\n                    data: [3, 3, 3, 3, 3, 3, 2.75]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Lowest Performer\",\r\n            value: \"$154\",\r\n            percentage: \"2.4%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgb(0,123,255,0.1)\",\r\n                    borderColor: \"rgb(0,123,255)\",\r\n                    data: [6, 2, 3, 2, 4, 5, 4]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default DashboardOverviewScreen;\r\n","import React from \"react\";\r\nimport {Card, CardBody, CardHeader} from \"shards-react\";\r\n\r\nclass AllTransactionsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    generateHeaders() {\r\n        return this.props.headers.map((header) => (<th scope=\"col\" className=\"border-0\">{header}</th>));\r\n    }\r\n\r\n    generateRows() {\r\n        return this.props.transactions.map((x, i) => (\r\n                <tr>\r\n                    <td>{this.formatDate(x.date)}</td>\r\n                    <td>{x.type.toUpperCase()}</td>\r\n                    <td>{x.ticker.toUpperCase()}</td>\r\n                    <td>{x.quantity}</td>\r\n                    <td>${x.price.toFixed(2)}</td>\r\n                    <td>${x.total.toFixed(2)}</td>\r\n                </tr>\r\n            )\r\n        );\r\n    }\r\n\r\n    formatDate(unformattedDate) {\r\n        let year = unformattedDate.substring(0, 4);\r\n        let month = unformattedDate.substring(5, 7);\r\n        let day = unformattedDate.substring(8, 10);\r\n\r\n        return month + \"/\" + day + \"/\" + year;\r\n    }\r\n\r\n    displayChart() {\r\n        return (\r\n            <Card small className=\"mb-4\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{this.props.title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"p-0 pb-3\">\r\n                    <table className=\"table mb-0\">\r\n                        <thead className=\"bg-light\">\r\n                        <tr>\r\n                            {this.generateHeaders()}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.generateRows()}\r\n                        </tbody>\r\n                    </table>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let {transactions} = this.props;\r\n\r\n        if (transactions.length === 0)\r\n            return (\r\n                <Card small className=\"mb-4\">\r\n                    <CardHeader>\r\n                        <h1 className=\"m-0\">No Transactions Found</h1>\r\n                    </CardHeader>\r\n                </Card>\r\n            );\r\n        else if (transactions.length > 0)\r\n            return this.displayChart();\r\n    }\r\n}\r\n\r\nexport default AllTransactionsTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Card, CardBody, CardFooter, CardHeader, Col, FormSelect, Row} from \"shards-react\";\r\n\r\nimport Chart from \"../utils/chart\";\r\n\r\nclass BuySellDividendRatioGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chartConfig = {\r\n            type: \"pie\",\r\n            data: this.props.chartData,\r\n            options: {\r\n                ...{\r\n                    legend: {\r\n                        position: \"bottom\",\r\n                        labels: {\r\n                            padding: 25,\r\n                            boxWidth: 20\r\n                        }\r\n                    },\r\n                    cutoutPercentage: 0,\r\n                    tooltips: {\r\n                        custom: false,\r\n                        mode: \"index\",\r\n                        position: \"nearest\"\r\n                    }\r\n                },\r\n                ...this.props.chartOptions\r\n            }\r\n        };\r\n\r\n        new Chart(this.canvasRef.current, chartConfig);\r\n    }\r\n\r\n    render() {\r\n        const {title} = this.props;\r\n        return (\r\n            <Card small className=\"mb-4\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"d-flex py-0\">\r\n                    <canvas\r\n                        height=\"220\"\r\n                        ref={this.canvasRef}\r\n                        className=\"blog-users-by-device m-auto\"\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nBuySellDividendRatioGraph.propTypes = {\r\n    /**\r\n     * The component's title.\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * The chart config object.\r\n     */\r\n    chartConfig: PropTypes.object,\r\n    /**\r\n     * The Chart.js options.\r\n     */\r\n    chartOptions: PropTypes.object,\r\n    /**\r\n     * The chart data.\r\n     */\r\n    chartData: PropTypes.object\r\n};\r\n\r\nBuySellDividendRatioGraph.defaultProps = {\r\n    title: \"Buy/Sell/Dividend Ratio\",\r\n    chartData: {\r\n        datasets: [\r\n            {\r\n                hoverBorderColor: \"#ffffff\",\r\n                data: [50, 40, 10],\r\n                backgroundColor: [\r\n                    \"rgba(0,123,255,0.6)\",\r\n                    \"rgba(0,123,255,0.9)\",\r\n                    \"rgba(0,123,255,0.2)\"\r\n                ]\r\n            }\r\n        ],\r\n        labels: [\"Buy\", \"Sell\", \"Dividend\"]\r\n    }\r\n};\r\n\r\nexport default BuySellDividendRatioGraph;\r\n","import React from \"react\";\r\nimport {Button, CardBody, Progress} from \"shards-react\";\r\n\r\nconst CustomFileUpload = ({setFile, buttonClick, progressCounter}) => (\r\n    <div className=\"custom-file mb-3\">\r\n        <input type=\"file\" className=\"custom-file-input\" id=\"customFile2\" onChange={setFile}/>\r\n        <label className=\"custom-file-label\" htmlFor=\"customFile2\">\r\n            Choose file...\r\n        </label>\r\n\r\n        <CardBody>\r\n            <center><Button onClick={buttonClick}>Submit File</Button></center>\r\n        </CardBody>\r\n        <Progress hidden={progressCounter === 0}\r\n                  theme=\"success\"\r\n                  style={{height: \"10px\"}}\r\n                  value={progressCounter}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default CustomFileUpload;\r\n","import {Card, CardBody, CardHeader} from \"shards-react\";\r\nimport React, {Component} from \"react\";\r\nimport AccessApiWrapper from \"../api/AccessApiWrapper\";\r\nimport CustomFileUpload from \"../common/CustomFileUpload\";\r\n\r\nvar accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass SubmitTransactionsFiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buyButtonColorIsSelected: \"primary\",\r\n            sellButtonColorIsSelected: \"secondary\",\r\n            dividendButtonColorIsSelected: \"secondary\",\r\n            quantityField: \"\",\r\n            priceField: \"\",\r\n            totalField: \"\",\r\n            type: \"buy\",\r\n            dateField: \"\",\r\n            progressCounter: 0\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.setFile = this.setFile.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    setFile(event) {\r\n        console.log(event.target.files);\r\n\r\n        this.setState(\r\n            {\r\n                file: event.target.files[0],\r\n                fileCharacterEstimatedTimeToUpload: ((event.target.files[0].size / 50) / 13) * 1000\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        const formData = new FormData();\r\n\r\n        let data = this.state.file;\r\n\r\n        formData.append('file', data);\r\n\r\n        var fileCharacterEstimatedTimeToUpload = this.state.fileCharacterEstimatedTimeToUpload;\r\n\r\n        setTimeout(() => {\r\n            this.setState({progressCounter: 25});\r\n        }, fileCharacterEstimatedTimeToUpload * .25);\r\n\r\n        setTimeout(() => {\r\n            this.setState({progressCounter: 50});\r\n        }, fileCharacterEstimatedTimeToUpload * .50);\r\n\r\n        setTimeout(() => {\r\n            this.setState({progressCounter: 75});\r\n        }, fileCharacterEstimatedTimeToUpload * .75);\r\n\r\n        setTimeout(() => {\r\n            this.setState({progressCounter: 100});\r\n        }, fileCharacterEstimatedTimeToUpload * 1);\r\n\r\n        accessApiWrapper.postFormData(\"/TransactionFile\", formData).then(() => {\r\n            this.setState({progressCounter: 100})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card small className=\"mb-4\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">Submit Transaction File</h6>\r\n                </CardHeader>\r\n\r\n                <CardBody className=\"mb-0\">\r\n                    <CustomFileUpload setFile={this.setFile} buttonClick={this.handleFormSubmit}\r\n                                      progressCounter={this.state.progressCounter}/>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitTransactionsFiles;\r\n","import React from \"react\";\r\nimport {Card, CardHeader, Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AllTransactionsTable from \"../components/tiles/AllTransactionsTable\";\r\nimport BuySellDividendRatioGraph from \"../components/tiles/BuySellDividendRatioGraph\";\r\nimport AccessApiWrapper from \"../components/api/AccessApiWrapper\";\r\nimport SubmitTransactionsFiles from \"../components/tiles/SubmitTransactionsFiles\";\r\n\r\nconst accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass AllTransactionsScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData: null,\r\n            isLoaded: false\r\n        };\r\n\r\n        this.determineChartData = this.determineChartData.bind(this);\r\n    }\r\n\r\n    determineChartData(result) {\r\n        let buyCount = 0;\r\n        let sellCount = 0;\r\n        let dividendCount = 0;\r\n\r\n        result.forEach((x) => {\r\n            if ((x.type) === \"buy\") buyCount++;\r\n            if ((x.type) === \"sell\") sellCount++;\r\n            if ((x.type) === \"dividend\") dividendCount++;\r\n        });\r\n\r\n        return {\r\n            datasets: [\r\n                {\r\n                    hoverBorderColor: \"#ffffff\",\r\n                    data: [buyCount, sellCount, dividendCount],\r\n                    backgroundColor: [\r\n                        \"rgba(0,123,255,0.6)\",\r\n                        \"rgba(0,123,255,0.9)\",\r\n                        \"rgba(0,123,255,0.2)\"\r\n                    ]\r\n                }\r\n            ],\r\n            labels: [\"Buy\", \"Sell\", \"Dividend\"]\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        accessApiWrapper.getData(\"/Transaction\").then((result) => {\r\n            this.setState({\r\n                    chartData: this.determineChartData(result),\r\n                    isLoaded: true,\r\n                    transactions: result,\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {isLoaded} = this.state;\r\n\r\n        if (isLoaded)\r\n            return (\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                                   className=\"text-sm-left\"/>\r\n                    </Row>\r\n\r\n                    {/* List */}\r\n                    <Row>\r\n                        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                            <AllTransactionsTable transactions={this.state.transactions} headers={[\"Date\", \"Type\", \"Ticker\", \"X\", \"Price\", \"Total\"]}\r\n                                                  title={\"All Transactions\"}/>\r\n                        </Col>\r\n\r\n                        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\r\n                            <SubmitTransactionsFiles />\r\n                            <BuySellDividendRatioGraph chartData={this.state.chartData}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        else return (\r\n            <Container fluid className=\"main-content-container px-4\">\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                               className=\"text-sm-left\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Card small className=\"mb-4\">\r\n                        <CardHeader>\r\n                            <h1 className=\"m-0\">Loading...</h1>\r\n                        </CardHeader>\r\n                    </Card>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllTransactionsScreen;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Form,\r\n    FormInput,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    ListGroup,\r\n    ListGroupItem\r\n} from \"shards-react\";\r\nimport React, {Component} from \"react\";\r\nimport AccessApiWrapper from \"../api/AccessApiWrapper\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\n\r\nvar accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass SubmitNewTransaction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buyButtonColorIsSelected: \"primary\",\r\n            sellButtonColorIsSelected: \"secondary\",\r\n            dividendButtonColorIsSelected: \"secondary\",\r\n            quantityField: \"\",\r\n            priceField: \"\",\r\n            totalField: \"\",\r\n            type: \"buy\",\r\n            dateField: \"\"\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.handleTypeButtons = this.handleTypeButtons.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let data = {\r\n            data: {\r\n                price: parseFloat(this.state.priceField),\r\n                total: parseFloat(this.state.totalField),\r\n                quantity: parseInt(this.state.quantityField),\r\n                type: this.state.type.toLowerCase(),\r\n                ticker: this.props.ticker.toLowerCase(),\r\n                date: this.state.dateField\r\n            }\r\n        };\r\n\r\n        accessApiWrapper.postData(\"/Transaction\", data);\r\n    }\r\n\r\n    handleTypeButtons(event) {\r\n        event.preventDefault();\r\n\r\n        if (event.target.name === \"buyButton\")\r\n            this.setState({\r\n                buyButtonColorIsSelected: \"primary\",\r\n                sellButtonColorIsSelected: \"secondary\",\r\n                dividendButtonColorIsSelected: \"secondary\"\r\n            });\r\n\r\n        if (event.target.name === \"sellButton\")\r\n            this.setState({\r\n                buyButtonColorIsSelected: \"secondary\",\r\n                sellButtonColorIsSelected: \"primary\",\r\n                dividendButtonColorIsSelected: \"secondary\"\r\n            });\r\n\r\n        if (event.target.name === \"dividendButton\")\r\n            this.setState({\r\n                buyButtonColorIsSelected: \"secondary\",\r\n                sellButtonColorIsSelected: \"secondary\",\r\n                dividendButtonColorIsSelected: \"primary\"\r\n            });\r\n\r\n        this.setState({type: event.target.name});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">New Transaction</h6>\r\n                </CardHeader>\r\n\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"px-3\">\r\n                        <center className=\"mb-3\">\r\n                            <Button name=\"buy\" pill theme={this.state.buyButtonColorIsSelected}\r\n                                    onClick={this.handleTypeButtons}>Buy</Button>\r\n                            <Button name=\"sell\" pill theme={this.state.sellButtonColorIsSelected}\r\n                                    onClick={this.handleTypeButtons}>Sell</Button>\r\n                            <Button name=\"dividend\" pill theme={this.state.dividendButtonColorIsSelected}\r\n                                    onClick={this.handleTypeButtons}>Dividend</Button>\r\n                        </center>\r\n\r\n                        <div>\r\n                            <label>Date</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormInput placeholder=\"11/12/2020\" type=\"date\" name=\"dateField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n\r\n                            <label>Quantity</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormInput placeholder=\"3\" name=\"quantityField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n\r\n                            <label>Price</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroupAddon type=\"prepend\">\r\n                                    <InputGroupText>$</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <FormInput placeholder=\"$12.54\" name=\"priceField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n\r\n                            <label>Total</label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroupAddon type=\"prepend\">\r\n                                    <InputGroupText>$</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <FormInput placeholder=\"$37.62\" name=\"totalField\" onChange={this.handleChange}/>\r\n                            </InputGroup>\r\n                        </div>\r\n\r\n                        <Form>\r\n                            <center>\r\n                                <Button onClick={this.handleFormSubmit} theme=\"primary\">Submit</Button>\r\n                            </center>\r\n                        </Form>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitNewTransaction;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\nimport StockGraph from \"../components/tiles/StockGraph\";\r\nimport SubmitNewTransaction from \"../components/tiles/SubmitNewTransaction\";\r\n\r\nconst StockOverviewScreen = ({smallStats}) => (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n            <PageTitle title=\"Some Stock Name\" subtitle=\"\" className=\"text-sm-left mb-3\"/>\r\n        </Row>\r\n\r\n        <Row>\r\n            {/* Editor */}\r\n            <Col lg=\"9\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                <StockGraph/>\r\n            </Col>\r\n\r\n            {/* Groups */}\r\n            <Col lg=\"3\" md=\"6\" sm=\"12\" className=\"mb-4\">\r\n                <SubmitNewTransaction ticker=\"test\"/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nStockOverviewScreen.propTypes = {\r\n    /**\r\n     * The small stats dataset.\r\n     */\r\n    smallStats: PropTypes.array\r\n};\r\n\r\nStockOverviewScreen.defaultProps = {\r\n    smallStats: [\r\n        {\r\n            label: \"Posts\",\r\n            value: \"2,390\",\r\n            percentage: \"4.7%\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n                    borderColor: \"rgb(0, 184, 216)\",\r\n                    data: [1, 2, 1, 3, 5, 4, 7]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Pages\",\r\n            value: \"182\",\r\n            percentage: \"12.4\",\r\n            increase: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"6\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(23,198,113,0.1)\",\r\n                    borderColor: \"rgb(23,198,113)\",\r\n                    data: [1, 2, 3, 3, 3, 4, 4]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Comments\",\r\n            value: \"8,147\",\r\n            percentage: \"3.8%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,180,0,0.1)\",\r\n                    borderColor: \"rgb(255,180,0)\",\r\n                    data: [2, 3, 3, 3, 4, 3, 3]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"New Customers\",\r\n            value: \"29\",\r\n            percentage: \"2.71%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgba(255,65,105,0.1)\",\r\n                    borderColor: \"rgb(255,65,105)\",\r\n                    data: [1, 7, 1, 3, 1, 4, 8]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Subscribers\",\r\n            value: \"17,281\",\r\n            percentage: \"2.4%\",\r\n            increase: false,\r\n            decrease: true,\r\n            chartLabels: [null, null, null, null, null, null, null],\r\n            attrs: {md: \"4\", sm: \"6\"},\r\n            datasets: [\r\n                {\r\n                    label: \"Today\",\r\n                    fill: \"start\",\r\n                    borderWidth: 1.5,\r\n                    backgroundColor: \"rgb(0,123,255,0.1)\",\r\n                    borderColor: \"rgb(0,123,255)\",\r\n                    data: [3, 2, 3, 2, 4, 5, 4]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default StockOverviewScreen;\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Form,\r\n    FormFeedback,\r\n    FormGroup,\r\n    FormInput,\r\n    FormSelect,\r\n    Row\r\n} from \"shards-react\";\r\n\r\nconst FormValidation = () => (\r\n    <Card small className=\"h-100\">\r\n        <CardBody>\r\n            <Form>\r\n                <h5>Register</h5>\r\n\r\n                <Row form>\r\n                    <Col md=\"6\" className=\"form-group\">\r\n                        <FormInput\r\n                            placeholder=\"First name\"\r\n                            required\r\n                            valid\r\n                            onChange={() => {\r\n                            }}\r\n                        />\r\n                        <FormFeedback valid>The first name looks good!</FormFeedback>\r\n                    </Col>\r\n                    <Col md=\"6\" className=\"form-group\">\r\n                        <FormInput\r\n                            placeholder=\"Last name\"\r\n                            required\r\n                            valid\r\n                            onChange={() => {\r\n                            }}\r\n                        />\r\n                        <FormFeedback valid>The last name looks good!</FormFeedback>\r\n                    </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                    <FormInput placeholder=\"Email\" required invalid/>\r\n                    <FormFeedback>The email is already in use.</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <FormSelect invalid>\r\n                        <option>Choose</option>\r\n                        <option>California</option>\r\n                        <option>Iowa</option>\r\n                        <option>Indiana</option>\r\n                    </FormSelect>\r\n                    <FormFeedback>Please select your state</FormFeedback>\r\n                </FormGroup>\r\n                <Button theme=\"primary\" className=\"mb-2 mr-1\">\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n        </CardBody>\r\n    </Card>\r\n);\r\n\r\nexport default FormValidation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormValidation from \"../components/tiles/FormValidation\";\r\nimport {Card, Col, Container, Row} from \"shards-react\";\r\n\r\nconst RegistrationScreen = ({smallStats}) => (\r\n    <Container fluid className=\"main-content-container px-4 pb-4\">\r\n        <div className=\"error\">\r\n            <div className=\"error__content\">\r\n                <Row>\r\n                    <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-5\">\r\n                        <Card>\r\n                            <FormValidation/>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    </Container>\r\n);\r\n\r\nexport default RegistrationScreen;\r\n","import React, {Component} from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\n\r\nexport default function withAuthentication(AuthComponent) {\r\n    const AuthService = new AuthenticationService();\r\n    return class AuthWrapped extends Component {\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                user: null\r\n            }\r\n        }\r\n\r\n        componentWillMount() {\r\n            if (!AuthService.loggedIn()) {\r\n                this.props.history.replace('/login')\r\n            } else {\r\n                try {\r\n                    const profile = AuthService.getProfile();\r\n                    this.setState({\r\n                        user: profile\r\n                    })\r\n                } catch (err) {\r\n                    AuthService.logout();\r\n                    this.props.history.replace('/login')\r\n                }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if (this.state.user) {\r\n                return (\r\n                    <AuthComponent history={this.props.history} user={this.state.user}/>\r\n                )\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://sartainstudios.com/\">\r\n                Sartain Studios\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function LoginForm(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <div className={classes.form}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        error={!props.isUsernameFieldValid}\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        helperText={props.helperTextUsernameField}\r\n                        onChange={props.onChange}\r\n                        label=\"Email Address\"\r\n                        name=\"username\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        helperText={props.helperTextPasswordField}\r\n                        fullWidth\r\n                        onChange={props.onChange}\r\n                        error={!props.isPasswordFieldValid}\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={props.onSubmit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport AuthenticationService from \"../authentication/services/AuthenticationService\";\r\nimport LoginForm from \"../authentication/components/LoginForm\";\r\n\r\nclass SignInScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isUsernameFieldValid: true,\r\n            isPasswordFieldValid: true,\r\n            helperTextPasswordField: \"\",\r\n            helperTextUsernameField: \"\"\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.AuthService = new AuthenticationService();\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.AuthService.loggedIn()) {\r\n            this.props.history.replace('/');\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        this.setState({\r\n            isUsernameFieldValid: true,\r\n            isPasswordFieldValid: true,\r\n            helperTextPasswordField: \"\",\r\n            helperTextUsernameField: \"\"\r\n        });\r\n\r\n        this.AuthService.login(this.state.username, this.state.password)\r\n            .then(response => {\r\n                    if (response.status > 299) {\r\n                        if (response.errors.Username != null) {\r\n                            this.setState({\r\n                                isUsernameFieldValid: false,\r\n                                helperTextUsernameField: response.errors.Username[0]\r\n                            });\r\n                        }\r\n\r\n                        if (response.errors.Password != null) {\r\n                            this.setState({\r\n                                isPasswordFieldValid: false,\r\n                                helperTextPasswordField: response.errors.Password[0]\r\n                            });\r\n                        }\r\n\r\n                        return;\r\n                    } else {\r\n                        if (response === \"No user with that username was found.\") {\r\n                            this.setState({\r\n                                isUsernameFieldValid: false,\r\n                                helperTextUsernameField: response\r\n                            });\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (response.includes(\"Password is not valid for username:\")) {\r\n                            this.setState({\r\n                                isPasswordFieldValid: false,\r\n                                helperTextPasswordField: response\r\n                            });\r\n\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.props.history.replace('/');\r\n                }\r\n            )\r\n            .catch(error => {\r\n                this.setState({isUsernameFieldValid: false, isPasswordFieldValid: false})\r\n            });\r\n    };\r\n\r\n    onChange = async event => {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <LoginForm onChange={this.onChange} onSubmit={this.handleSubmit}\r\n                           isUsernameFieldValid={this.state.isUsernameFieldValid}\r\n                           isPasswordFieldValid={this.state.isPasswordFieldValid}\r\n                           helperTextPasswordField={this.state.helperTextPasswordField}\r\n                           helperTextUsernameField={this.state.helperTextUsernameField}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInScreen;\r\n","import React, {Component} from \"react\";\r\nimport {Card, CardBody, CardHeader} from \"shards-react\";\r\n\r\nclass TotalEarningsByTicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    generateHeaders() {\r\n        return this.props.headers.map((header) => (<th scope=\"col\" className=\"border-0\">{header}</th>));\r\n    }\r\n\r\n    generateRows() {\r\n        return this.props.transactions.map((x, i) => (\r\n                <tr>\r\n                    <td>{x.name.toUpperCase()}</td>\r\n                    <td>{x.ticker.toUpperCase()}</td>\r\n                    <td>${x.totalProfit.toFixed(2)}</td>\r\n                </tr>\r\n            )\r\n        );\r\n        // <td>{x.totalProfitPercentage}</td>\r\n    }\r\n\r\n    formatDate(unformattedDate) {\r\n        let year = unformattedDate.substring(0, 4);\r\n        let month = unformattedDate.substring(5, 7);\r\n        let day = unformattedDate.substring(8, 10);\r\n\r\n        return month + \"/\" + day + \"/\" + year;\r\n    }\r\n\r\n    displayChart() {\r\n        return (\r\n            <Card small className=\"mb-4\">\r\n                <CardHeader className=\"border-bottom\">\r\n                    <h6 className=\"m-0\">{this.props.title}</h6>\r\n                </CardHeader>\r\n                <CardBody className=\"p-0 pb-3\">\r\n                    <table className=\"table mb-0\">\r\n                        <thead className=\"bg-light\">\r\n                        <tr>\r\n                            {this.generateHeaders()}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.generateRows()}\r\n                        </tbody>\r\n                    </table>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let {transactions} = this.props;\r\n\r\n        if (transactions.length === 0)\r\n            return (\r\n                <Card small className=\"mb-4\">\r\n                    <CardHeader>\r\n                        <h1 className=\"m-0\">No Transactions Found</h1>\r\n                    </CardHeader>\r\n                </Card>\r\n            );\r\n        else if (transactions.length > 0)\r\n            return this.displayChart();\r\n    }\r\n}\r\n\r\nexport default TotalEarningsByTicker;\r\n","import React from \"react\";\r\nimport {Card, CardHeader, Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AccessApiWrapper from \"../components/api/AccessApiWrapper\";\r\nimport TotalEarningsByTicker from \"../components/tiles/TotalEarningsByTickerTable\";\r\n\r\nconst accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass OwnedTickersScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData: null,\r\n            isLoaded: false\r\n        };\r\n\r\n        this.determineChartData = this.determineChartData.bind(this);\r\n    }\r\n\r\n    determineChartData(result) {\r\n        let buyCount = 0;\r\n        let sellCount = 0;\r\n        let dividendCount = 0;\r\n\r\n        result.forEach((x) => {\r\n            if ((x.type) === \"buy\") buyCount++;\r\n            if ((x.type) === \"sell\") sellCount++;\r\n            if ((x.type) === \"dividend\") dividendCount++;\r\n        });\r\n\r\n        return {\r\n            datasets: [\r\n                {\r\n                    hoverBorderColor: \"#ffffff\",\r\n                    data: [buyCount, sellCount, dividendCount],\r\n                    backgroundColor: [\r\n                        \"rgba(0,123,255,0.6)\",\r\n                        \"rgba(0,123,255,0.9)\",\r\n                        \"rgba(0,123,255,0.2)\"\r\n                    ]\r\n                }\r\n            ],\r\n            labels: [\"Buy\", \"Sell\", \"Dividend\"]\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        accessApiWrapper.getData(\"/Transactions-By-Company-Summary\").then((result) => {\r\n            result.forEach((x)=>{\r\n                x.name = \"Unknown\"\r\n                delete x.totalProfitPercentage\r\n            });\r\n\r\n            this.setState({\r\n                    chartData: this.determineChartData(result),\r\n                    isLoaded: true,\r\n                    transactions: result,\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {isLoaded} = this.state;\r\n\r\n        if (isLoaded)\r\n            return (\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                                   className=\"text-sm-left\"/>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                            <TotalEarningsByTicker transactions={this.state.transactions}\r\n                                                      headers={[\"Name\", \"Ticker\", \"Total Profit\"]}\r\n                                                      title={\"All Transactions by company\"}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        else return (\r\n            <Container fluid className=\"main-content-container px-4\">\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                               className=\"text-sm-left\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Card small className=\"mb-4\">\r\n                        <CardHeader>\r\n                            <h1 className=\"m-0\">Loading...</h1>\r\n                        </CardHeader>\r\n                    </Card>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OwnedTickersScreen;\r\n","import React from \"react\";\r\nimport {Card, CardHeader, Col, Container, Row} from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AccessApiWrapper from \"../components/api/AccessApiWrapper\";\r\nimport AllTransactionsTable from \"../components/tiles/AllTransactionsTable\";\r\n\r\nconst accessApiWrapper = new AccessApiWrapper();\r\n\r\nclass TransactionsByTicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData: null,\r\n            transactions: [],\r\n            isLoaded: false\r\n        };\r\n\r\n        this.determineChartData = this.determineChartData.bind(this);\r\n        this.getTransactionDataForChart = this.getTransactionDataForChart.bind(this);\r\n    }\r\n\r\n    determineChartData(result) {\r\n        let buyCount = 0;\r\n        let sellCount = 0;\r\n        let dividendCount = 0;\r\n\r\n        result.forEach((x) => {\r\n            if ((x.type) === \"buy\") buyCount++;\r\n            if ((x.type) === \"sell\") sellCount++;\r\n            if ((x.type) === \"dividend\") dividendCount++;\r\n        });\r\n\r\n        return {\r\n            datasets: [\r\n                {\r\n                    hoverBorderColor: \"#ffffff\",\r\n                    data: [buyCount, sellCount, dividendCount],\r\n                    backgroundColor: [\r\n                        \"rgba(0,123,255,0.6)\",\r\n                        \"rgba(0,123,255,0.9)\",\r\n                        \"rgba(0,123,255,0.2)\"\r\n                    ]\r\n                }\r\n            ],\r\n            labels: [\"Buy\", \"Sell\", \"Dividend\"]\r\n        };\r\n    }\r\n\r\n    getTransactionDataForChart() {\r\n        var stuff = this.state.transactions.map((transaction) => {\r\n            return transaction.transactionModels.map((data) => {\r\n                return data\r\n            })\r\n        })\r\n\r\n        return stuff.map((ex)=>{\r\n            console.log(ex)\r\n            return <AllTransactionsTable transactions={ex}\r\n                                         headers={[\"Date\", \"Type\", \"Ticker\", \"X\", \"Price\", \"Total\"]}\r\n                                         title={ex[0].ticker.toUpperCase()}/>\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        accessApiWrapper.getData(\"/Transactions-By-Company\").then((result) => {\r\n            result.forEach((x) => {\r\n                x.name = \"Unknown\"\r\n                delete x.totalProfitPercentage\r\n            });\r\n\r\n            this.setState({\r\n                    chartData: this.determineChartData(result),\r\n                    isLoaded: true,\r\n                    transactions: result,\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {isLoaded} = this.state;\r\n\r\n        if (isLoaded)\r\n            return (\r\n                <Container fluid className=\"main-content-container px-4\">\r\n                    {/* Page Header */}\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                        <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                                   className=\"text-sm-left\"/>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                            {this.getTransactionDataForChart()}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        else return (\r\n            <Container fluid className=\"main-content-container px-4\">\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\" title=\"View All Transactions\" subtitle=\"Transactions\"\r\n                               className=\"text-sm-left\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Card small className=\"mb-4\">\r\n                        <CardHeader>\r\n                            <h1 className=\"m-0\">Loading...</h1>\r\n                        </CardHeader>\r\n                    </Card>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TransactionsByTicker;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n// Layout Types\r\nimport {DefaultLayout} from \"./components/layout/default layout\";\r\n// Route Views\r\nimport DashboardOverviewScreen from \"./pages/DashboardOverviewScreen\";\r\nimport AllTransactionsScreen from \"./pages/AllTransactionsScreen\";\r\nimport StockOverviewScreen from \"./pages/StockOverviewScreen\";\r\nimport RegistrationScreen from \"./pages/RegistrationScreen\";\r\nimport withAuthentication from \"./authentication/higherOrderComponents/withAuthentication\";\r\nimport Empty from \"./components/layout/default layout/Empty\";\r\nimport SignInScreen from \"./pages/SignInScreen\";\r\nimport OwnedCompaniesScreen from \"./pages/OwnedTickersScreen\";\r\nimport TransactionsByTicker from \"./pages/TransactionsByTicker\";\r\n\r\nexport default [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        layout: DefaultLayout,\r\n        component: () => <Redirect to=\"/dashboard-overview\"/>\r\n    },\r\n    {\r\n        path: \"/dashboard-overview\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(DashboardOverviewScreen)\r\n    },\r\n    {\r\n        path: \"/stock-overview\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(StockOverviewScreen)\r\n    },\r\n    {\r\n        path: \"/transactions-list\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(AllTransactionsScreen)\r\n    },\r\n    {\r\n        path: \"/owned-tickers\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(OwnedCompaniesScreen)\r\n    },\r\n    {\r\n        path: \"/transactions-by-ticker\",\r\n        layout: DefaultLayout,\r\n        component: withAuthentication(TransactionsByTicker)\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        layout: Empty,\r\n        component: SignInScreen\r\n    },\r\n    {\r\n        path: \"/registration\",\r\n        layout: DefaultLayout,\r\n        component: RegistrationScreen\r\n    }\r\n];\r\n","import React, {Component} from \"react\";\r\nimport GoogleAnalytics from \"react-ga\";\r\n\r\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\r\n\r\nconst withTracker = (WrappedComponent, options = {}) => {\r\n    const trackPage = page => {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            return;\r\n        }\r\n\r\n        GoogleAnalytics.set({\r\n            page,\r\n            ...options\r\n        });\r\n        GoogleAnalytics.pageview(page);\r\n    };\r\n\r\n    const BASENAME = process.env.REACT_APP_BASENAME || \"\";\r\n\r\n    // eslint-disable-next-line\r\n    const HOC = class extends Component {\r\n        componentDidMount() {\r\n            // eslint-disable-next-line\r\n            const page = this.props.location.pathname + this.props.location.search;\r\n            trackPage(`${BASENAME}${page}`);\r\n        }\r\n\r\n        componentDidUpdate(prevProps) {\r\n            const currentPage =\r\n                prevProps.location.pathname + prevProps.location.search;\r\n            const nextPage =\r\n                this.props.location.pathname + this.props.location.search;\r\n\r\n            if (currentPage !== nextPage) {\r\n                trackPage(`${BASENAME}${nextPage}`);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    };\r\n\r\n    return HOC;\r\n};\r\n\r\nexport default withTracker;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport withTracker from \"./withTracker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nexport default () => (\r\n    <Router basename={process.env.PUBLIC_URL || \"\"}>\r\n        <div>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    <Route\r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={withTracker(props => {\r\n                            return (\r\n                                <route.layout {...props}>\r\n                                    <route.component {...props} />\r\n                                </route.layout>\r\n                            );\r\n                        })}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    </Router>\r\n);\r\n"],"sourceRoot":""}